name: Release
on:
  push:
    tags:
      - "v*"
  pull_request:
    branches:
      - master

# OS and Arch reference: https://gist.github.com/asukakenji/f15ba7e588ac42795f421b48b8aede63

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.2'
      - name: Build and Package
        run: build/linux_dist.sh
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: distributions
          path: |
            dist

  build-macos:
    name: Build on MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.2'
      - name: Build and Package
        run: build/macos_dist.sh
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: distributions
          path: |
            dist

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.2'
      - name: Build
        run: |
          go build -o PairMesh.exe  -ldflags "-s -w -H=windowsgui -X github.com/pairmesh/pairmesh/version.GitHash=$(git describe --no-match --always --dirty) -X github.com/pairmesh/pairmesh/version.GitBranch=$(git rev-parse --abbrev-ref HEAD)" ./cmd/pairmesh
          Compress-Archive -Update -Path .\PairMesh.exe dist/"pairmesh_$(git describe --always --tags --abbrev=0)_windows_amd64.zip"
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: distributions
          retention-days: 1
          path: |
            dist
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - build-windows
      - build-linux
      - build-macos
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Check artifacts
        run: tree
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          automatic_release_tag: "latest"
          files: |
            distributions/*
