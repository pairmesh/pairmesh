// Code generated by go-queryset. DO NOT EDIT.
package models

import (
	"errors"
	"fmt"
	"strings"
	"time"

	"gorm.io/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set AuthKeyQuerySet

// AuthKeyQuerySet is an queryset type for AuthKey
type AuthKeyQuerySet struct {
	db *gorm.DB
}

// NewAuthKeyQuerySet constructs new AuthKeyQuerySet
func NewAuthKeyQuerySet(db *gorm.DB) AuthKeyQuerySet {
	return AuthKeyQuerySet{
		db: db.Model(&AuthKey{}),
	}
}

func (qs AuthKeyQuerySet) w(db *gorm.DB) AuthKeyQuerySet {
	return NewAuthKeyQuerySet(db)
}

func (qs AuthKeyQuerySet) Preload(query string, args ...interface{}) AuthKeyQuerySet {
	return NewAuthKeyQuerySet(qs.db.Preload(query, args...))
}

// Preload preload associations with given conditions
//    db.Preload("Orders", "state NOT IN (?)", "cancelled").Find(&users)
func (qs AuthKeyQuerySet) Select(fields ...AuthKeyDBSchemaField) AuthKeyQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *AuthKey) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *AuthKey) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) All(ret *[]AuthKey) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) CreatedAtEq(createdAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`created_at` = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) CreatedAtGt(createdAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`created_at` > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) CreatedAtGte(createdAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`created_at` >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) CreatedAtLt(createdAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`created_at` < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) CreatedAtLte(createdAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`created_at` <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) CreatedAtNe(createdAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`created_at` != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) Delete() error {
	return qs.db.Delete(AuthKey{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(AuthKey{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(AuthKey{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) DeletedAtEq(deletedAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`deleted_at` = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) DeletedAtGt(deletedAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`deleted_at` > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) DeletedAtGte(deletedAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`deleted_at` >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) DeletedAtIsNotNull() AuthKeyQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) DeletedAtIsNull() AuthKeyQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) DeletedAtLt(deletedAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`deleted_at` < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) DeletedAtLte(deletedAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`deleted_at` <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) DeletedAtNe(deletedAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`deleted_at` != ?", deletedAt))
}

// EnabledEq is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) EnabledEq(enabled bool) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`enabled` = ?", enabled))
}

// EnabledIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) EnabledIn(enabled ...bool) AuthKeyQuerySet {
	if len(enabled) == 0 {
		qs.db.AddError(errors.New("must at least pass one enabled in EnabledIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("enabled IN (?)", enabled))
}

// EnabledNe is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) EnabledNe(enabled bool) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`enabled` != ?", enabled))
}

// EnabledNotIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) EnabledNotIn(enabled ...bool) AuthKeyQuerySet {
	if len(enabled) == 0 {
		qs.db.AddError(errors.New("must at least pass one enabled in EnabledNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("enabled NOT IN (?)", enabled))
}

// ExpiredAtEq is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) ExpiredAtEq(expiredAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`expired_at` = ?", expiredAt))
}

// ExpiredAtGt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) ExpiredAtGt(expiredAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`expired_at` > ?", expiredAt))
}

// ExpiredAtGte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) ExpiredAtGte(expiredAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`expired_at` >= ?", expiredAt))
}

// ExpiredAtLt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) ExpiredAtLt(expiredAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`expired_at` < ?", expiredAt))
}

// ExpiredAtLte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) ExpiredAtLte(expiredAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`expired_at` <= ?", expiredAt))
}

// ExpiredAtNe is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) ExpiredAtNe(expiredAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`expired_at` != ?", expiredAt))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) GetUpdater() AuthKeyUpdater {
	return NewAuthKeyUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) IDEq(ID ID) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`id` = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) IDGt(ID ID) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`id` > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) IDGte(ID ID) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`id` >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) IDIn(ID ...ID) AuthKeyQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) IDLt(ID ID) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`id` < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) IDLte(ID ID) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`id` <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) IDNe(ID ID) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`id` != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) IDNotIn(ID ...ID) AuthKeyQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// KeyEq is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) KeyEq(key string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`key` = ?", key))
}

// KeyGt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) KeyGt(key string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`key` > ?", key))
}

// KeyGte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) KeyGte(key string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`key` >= ?", key))
}

// KeyIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) KeyIn(key ...string) AuthKeyQuerySet {
	if len(key) == 0 {
		qs.db.AddError(errors.New("must at least pass one key in KeyIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("key IN (?)", key))
}

// KeyLike is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) KeyLike(key string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`key` LIKE ?", key))
}

// KeyLt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) KeyLt(key string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`key` < ?", key))
}

// KeyLte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) KeyLte(key string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`key` <= ?", key))
}

// KeyNe is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) KeyNe(key string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`key` != ?", key))
}

// KeyNotIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) KeyNotIn(key ...string) AuthKeyQuerySet {
	if len(key) == 0 {
		qs.db.AddError(errors.New("must at least pass one key in KeyNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("key NOT IN (?)", key))
}

// KeyNotlike is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) KeyNotlike(key string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`key` NOT LIKE ?", key))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) Limit(limit int) AuthKeyQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// MachineIDEq is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) MachineIDEq(machineID string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`machine_id` = ?", machineID))
}

// MachineIDGt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) MachineIDGt(machineID string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`machine_id` > ?", machineID))
}

// MachineIDGte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) MachineIDGte(machineID string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`machine_id` >= ?", machineID))
}

// MachineIDIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) MachineIDIn(machineID ...string) AuthKeyQuerySet {
	if len(machineID) == 0 {
		qs.db.AddError(errors.New("must at least pass one machineID in MachineIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("machine_id IN (?)", machineID))
}

// MachineIDLike is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) MachineIDLike(machineID string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`machine_id` LIKE ?", machineID))
}

// MachineIDLt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) MachineIDLt(machineID string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`machine_id` < ?", machineID))
}

// MachineIDLte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) MachineIDLte(machineID string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`machine_id` <= ?", machineID))
}

// MachineIDNe is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) MachineIDNe(machineID string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`machine_id` != ?", machineID))
}

// MachineIDNotIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) MachineIDNotIn(machineID ...string) AuthKeyQuerySet {
	if len(machineID) == 0 {
		qs.db.AddError(errors.New("must at least pass one machineID in MachineIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("machine_id NOT IN (?)", machineID))
}

// MachineIDNotlike is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) MachineIDNotlike(machineID string) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`machine_id` NOT LIKE ?", machineID))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) Offset(offset int) AuthKeyQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs AuthKeyQuerySet) One(ret *AuthKey) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderAscByCreatedAt() AuthKeyQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderAscByDeletedAt() AuthKeyQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByEnabled is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderAscByEnabled() AuthKeyQuerySet {
	return qs.w(qs.db.Order("enabled ASC"))
}

// OrderAscByExpiredAt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderAscByExpiredAt() AuthKeyQuerySet {
	return qs.w(qs.db.Order("expired_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderAscByID() AuthKeyQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByKey is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderAscByKey() AuthKeyQuerySet {
	return qs.w(qs.db.Order("key ASC"))
}

// OrderAscByMachineID is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderAscByMachineID() AuthKeyQuerySet {
	return qs.w(qs.db.Order("machine_id ASC"))
}

// OrderAscByRole is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderAscByRole() AuthKeyQuerySet {
	return qs.w(qs.db.Order("role ASC"))
}

// OrderAscByType is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderAscByType() AuthKeyQuerySet {
	return qs.w(qs.db.Order("type ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderAscByUpdatedAt() AuthKeyQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderAscByUserID is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderAscByUserID() AuthKeyQuerySet {
	return qs.w(qs.db.Order("user_id ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderDescByCreatedAt() AuthKeyQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderDescByDeletedAt() AuthKeyQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByEnabled is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderDescByEnabled() AuthKeyQuerySet {
	return qs.w(qs.db.Order("enabled DESC"))
}

// OrderDescByExpiredAt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderDescByExpiredAt() AuthKeyQuerySet {
	return qs.w(qs.db.Order("expired_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderDescByID() AuthKeyQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByKey is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderDescByKey() AuthKeyQuerySet {
	return qs.w(qs.db.Order("key DESC"))
}

// OrderDescByMachineID is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderDescByMachineID() AuthKeyQuerySet {
	return qs.w(qs.db.Order("machine_id DESC"))
}

// OrderDescByRole is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderDescByRole() AuthKeyQuerySet {
	return qs.w(qs.db.Order("role DESC"))
}

// OrderDescByType is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderDescByType() AuthKeyQuerySet {
	return qs.w(qs.db.Order("type DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderDescByUpdatedAt() AuthKeyQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// OrderDescByUserID is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) OrderDescByUserID() AuthKeyQuerySet {
	return qs.w(qs.db.Order("user_id DESC"))
}

// PreloadUser is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) PreloadUser() AuthKeyQuerySet {
	return qs.w(qs.db.Preload("User"))
}

// RoleEq is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) RoleEq(role KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`role` = ?", role))
}

// RoleGt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) RoleGt(role KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`role` > ?", role))
}

// RoleGte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) RoleGte(role KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`role` >= ?", role))
}

// RoleIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) RoleIn(role ...KeyType) AuthKeyQuerySet {
	if len(role) == 0 {
		qs.db.AddError(errors.New("must at least pass one role in RoleIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("role IN (?)", role))
}

// RoleLike is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) RoleLike(role KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`role` LIKE ?", role))
}

// RoleLt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) RoleLt(role KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`role` < ?", role))
}

// RoleLte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) RoleLte(role KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`role` <= ?", role))
}

// RoleNe is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) RoleNe(role KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`role` != ?", role))
}

// RoleNotIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) RoleNotIn(role ...KeyType) AuthKeyQuerySet {
	if len(role) == 0 {
		qs.db.AddError(errors.New("must at least pass one role in RoleNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("role NOT IN (?)", role))
}

// RoleNotlike is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) RoleNotlike(role KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`role` NOT LIKE ?", role))
}

// TypeEq is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) TypeEq(typeValue KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`type` = ?", typeValue))
}

// TypeGt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) TypeGt(typeValue KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`type` > ?", typeValue))
}

// TypeGte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) TypeGte(typeValue KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`type` >= ?", typeValue))
}

// TypeIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) TypeIn(typeValue ...KeyType) AuthKeyQuerySet {
	if len(typeValue) == 0 {
		qs.db.AddError(errors.New("must at least pass one typeValue in TypeIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("type IN (?)", typeValue))
}

// TypeLike is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) TypeLike(typeValue KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`type` LIKE ?", typeValue))
}

// TypeLt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) TypeLt(typeValue KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`type` < ?", typeValue))
}

// TypeLte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) TypeLte(typeValue KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`type` <= ?", typeValue))
}

// TypeNe is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) TypeNe(typeValue KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`type` != ?", typeValue))
}

// TypeNotIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) TypeNotIn(typeValue ...KeyType) AuthKeyQuerySet {
	if len(typeValue) == 0 {
		qs.db.AddError(errors.New("must at least pass one typeValue in TypeNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("type NOT IN (?)", typeValue))
}

// TypeNotlike is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) TypeNotlike(typeValue KeyType) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`type` NOT LIKE ?", typeValue))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UpdatedAtEq(updatedAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`updated_at` = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UpdatedAtGt(updatedAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`updated_at` > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UpdatedAtGte(updatedAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`updated_at` >= ?", updatedAt))
}

// UpdatedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UpdatedAtIsNotNull() AuthKeyQuerySet {
	return qs.w(qs.db.Where("updated_at IS NOT NULL"))
}

// UpdatedAtIsNull is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UpdatedAtIsNull() AuthKeyQuerySet {
	return qs.w(qs.db.Where("updated_at IS NULL"))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UpdatedAtLt(updatedAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`updated_at` < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UpdatedAtLte(updatedAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`updated_at` <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UpdatedAtNe(updatedAt time.Time) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`updated_at` != ?", updatedAt))
}

// UserIDEq is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UserIDEq(userID ID) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`user_id` = ?", userID))
}

// UserIDGt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UserIDGt(userID ID) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`user_id` > ?", userID))
}

// UserIDGte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UserIDGte(userID ID) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`user_id` >= ?", userID))
}

// UserIDIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UserIDIn(userID ...ID) AuthKeyQuerySet {
	if len(userID) == 0 {
		qs.db.AddError(errors.New("must at least pass one userID in UserIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id IN (?)", userID))
}

// UserIDLt is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UserIDLt(userID ID) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`user_id` < ?", userID))
}

// UserIDLte is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UserIDLte(userID ID) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`user_id` <= ?", userID))
}

// UserIDNe is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UserIDNe(userID ID) AuthKeyQuerySet {
	return qs.w(qs.db.Where("`user_id` != ?", userID))
}

// UserIDNotIn is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UserIDNotIn(userID ...ID) AuthKeyQuerySet {
	if len(userID) == 0 {
		qs.db.AddError(errors.New("must at least pass one userID in UserIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id NOT IN (?)", userID))
}

// UserIsNotNull is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UserIsNotNull() AuthKeyQuerySet {
	return qs.w(qs.db.Where("user IS NOT NULL"))
}

// UserIsNull is an autogenerated method
// nolint: dupl
func (qs AuthKeyQuerySet) UserIsNull() AuthKeyQuerySet {
	return qs.w(qs.db.Where("user IS NULL"))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) SetCreatedAt(createdAt time.Time) AuthKeyUpdater {
	u.fields[string(AuthKeyDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) SetDeletedAt(deletedAt *time.Time) AuthKeyUpdater {
	u.fields[string(AuthKeyDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetEnabled is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) SetEnabled(enabled bool) AuthKeyUpdater {
	u.fields[string(AuthKeyDBSchema.Enabled)] = enabled
	return u
}

// SetExpiredAt is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) SetExpiredAt(expiredAt time.Time) AuthKeyUpdater {
	u.fields[string(AuthKeyDBSchema.ExpiredAt)] = expiredAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) SetID(ID ID) AuthKeyUpdater {
	u.fields[string(AuthKeyDBSchema.ID)] = ID
	return u
}

// SetKey is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) SetKey(key string) AuthKeyUpdater {
	u.fields[string(AuthKeyDBSchema.Key)] = key
	return u
}

// SetMachineID is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) SetMachineID(machineID string) AuthKeyUpdater {
	u.fields[string(AuthKeyDBSchema.MachineID)] = machineID
	return u
}

// SetRole is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) SetRole(role KeyType) AuthKeyUpdater {
	u.fields[string(AuthKeyDBSchema.Role)] = role
	return u
}

// SetType is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) SetType(typeValue KeyType) AuthKeyUpdater {
	u.fields[string(AuthKeyDBSchema.Type)] = typeValue
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) SetUpdatedAt(updatedAt *time.Time) AuthKeyUpdater {
	u.fields[string(AuthKeyDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SetUserID is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) SetUserID(userID ID) AuthKeyUpdater {
	u.fields[string(AuthKeyDBSchema.UserID)] = userID
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u AuthKeyUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set AuthKeyQuerySet

// ===== BEGIN of AuthKey modifiers

// AuthKeyDBSchemaField describes database schema field. It requires for method 'Update'
type AuthKeyDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f AuthKeyDBSchemaField) String() string {
	return string(f)
}

// AuthKeyDBSchema stores db field names of AuthKey
var AuthKeyDBSchema = struct {
	ID        AuthKeyDBSchemaField
	CreatedAt AuthKeyDBSchemaField
	UpdatedAt AuthKeyDBSchemaField
	DeletedAt AuthKeyDBSchemaField
	UserID    AuthKeyDBSchemaField
	User      AuthKeyDBSchemaField
	Type      AuthKeyDBSchemaField
	Role      AuthKeyDBSchemaField
	Key       AuthKeyDBSchemaField
	MachineID AuthKeyDBSchemaField
	ExpiredAt AuthKeyDBSchemaField
	Enabled   AuthKeyDBSchemaField
}{

	ID:        AuthKeyDBSchemaField("id"),
	CreatedAt: AuthKeyDBSchemaField("created_at"),
	UpdatedAt: AuthKeyDBSchemaField("updated_at"),
	DeletedAt: AuthKeyDBSchemaField("deleted_at"),
	UserID:    AuthKeyDBSchemaField("user_id"),
	User:      AuthKeyDBSchemaField("user"),
	Type:      AuthKeyDBSchemaField("type"),
	Role:      AuthKeyDBSchemaField("role"),
	Key:       AuthKeyDBSchemaField("key"),
	MachineID: AuthKeyDBSchemaField("machine_id"),
	ExpiredAt: AuthKeyDBSchemaField("expired_at"),
	Enabled:   AuthKeyDBSchemaField("enabled"),
}

// Update updates AuthKey fields by primary key
// nolint: dupl
func (o *AuthKey) Update(db *gorm.DB, fields ...AuthKeyDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"user_id":    o.UserID,
		"user":       o.User,
		"type":       o.Type,
		"role":       o.Role,
		"key":        o.Key,
		"machine_id": o.MachineID,
		"expired_at": o.ExpiredAt,
		"enabled":    o.Enabled,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update AuthKey %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// AuthKeyUpdater is an AuthKey updates manager
type AuthKeyUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewAuthKeyUpdater creates new AuthKey updater
// nolint: dupl
func NewAuthKeyUpdater(db *gorm.DB) AuthKeyUpdater {
	return AuthKeyUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&AuthKey{}),
	}
}

// ===== END of AuthKey modifiers

// ===== BEGIN of query set DeviceQuerySet

// DeviceQuerySet is an queryset type for Device
type DeviceQuerySet struct {
	db *gorm.DB
}

// NewDeviceQuerySet constructs new DeviceQuerySet
func NewDeviceQuerySet(db *gorm.DB) DeviceQuerySet {
	return DeviceQuerySet{
		db: db.Model(&Device{}),
	}
}

func (qs DeviceQuerySet) w(db *gorm.DB) DeviceQuerySet {
	return NewDeviceQuerySet(db)
}

func (qs DeviceQuerySet) Preload(query string, args ...interface{}) DeviceQuerySet {
	return NewDeviceQuerySet(qs.db.Preload(query, args...))
}

// Preload preload associations with given conditions
//    db.Preload("Orders", "state NOT IN (?)", "cancelled").Find(&users)
func (qs DeviceQuerySet) Select(fields ...DeviceDBSchemaField) DeviceQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *Device) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Device) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// AddressEq is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) AddressEq(address string) DeviceQuerySet {
	return qs.w(qs.db.Where("`address` = ?", address))
}

// AddressGt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) AddressGt(address string) DeviceQuerySet {
	return qs.w(qs.db.Where("`address` > ?", address))
}

// AddressGte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) AddressGte(address string) DeviceQuerySet {
	return qs.w(qs.db.Where("`address` >= ?", address))
}

// AddressIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) AddressIn(address ...string) DeviceQuerySet {
	if len(address) == 0 {
		qs.db.AddError(errors.New("must at least pass one address in AddressIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("address IN (?)", address))
}

// AddressLike is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) AddressLike(address string) DeviceQuerySet {
	return qs.w(qs.db.Where("`address` LIKE ?", address))
}

// AddressLt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) AddressLt(address string) DeviceQuerySet {
	return qs.w(qs.db.Where("`address` < ?", address))
}

// AddressLte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) AddressLte(address string) DeviceQuerySet {
	return qs.w(qs.db.Where("`address` <= ?", address))
}

// AddressNe is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) AddressNe(address string) DeviceQuerySet {
	return qs.w(qs.db.Where("`address` != ?", address))
}

// AddressNotIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) AddressNotIn(address ...string) DeviceQuerySet {
	if len(address) == 0 {
		qs.db.AddError(errors.New("must at least pass one address in AddressNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("address NOT IN (?)", address))
}

// AddressNotlike is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) AddressNotlike(address string) DeviceQuerySet {
	return qs.w(qs.db.Where("`address` NOT LIKE ?", address))
}

// All is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) All(ret *[]Device) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) CreatedAtEq(createdAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`created_at` = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) CreatedAtGt(createdAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`created_at` > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) CreatedAtGte(createdAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`created_at` >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) CreatedAtLt(createdAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`created_at` < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) CreatedAtLte(createdAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`created_at` <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) CreatedAtNe(createdAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`created_at` != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) Delete() error {
	return qs.db.Delete(Device{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(Device{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(Device{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) DeletedAtEq(deletedAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`deleted_at` = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) DeletedAtGt(deletedAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`deleted_at` > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) DeletedAtGte(deletedAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`deleted_at` >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) DeletedAtIsNotNull() DeviceQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) DeletedAtIsNull() DeviceQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) DeletedAtLt(deletedAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`deleted_at` < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) DeletedAtLte(deletedAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`deleted_at` <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) DeletedAtNe(deletedAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`deleted_at` != ?", deletedAt))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) GetUpdater() DeviceUpdater {
	return NewDeviceUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) IDEq(ID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`id` = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) IDGt(ID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`id` > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) IDGte(ID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`id` >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) IDIn(ID ...ID) DeviceQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) IDLt(ID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`id` < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) IDLte(ID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`id` <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) IDNe(ID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`id` != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) IDNotIn(ID ...ID) DeviceQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// LastSeenEq is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) LastSeenEq(lastSeen time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`last_seen` = ?", lastSeen))
}

// LastSeenGt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) LastSeenGt(lastSeen time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`last_seen` > ?", lastSeen))
}

// LastSeenGte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) LastSeenGte(lastSeen time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`last_seen` >= ?", lastSeen))
}

// LastSeenLt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) LastSeenLt(lastSeen time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`last_seen` < ?", lastSeen))
}

// LastSeenLte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) LastSeenLte(lastSeen time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`last_seen` <= ?", lastSeen))
}

// LastSeenNe is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) LastSeenNe(lastSeen time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`last_seen` != ?", lastSeen))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) Limit(limit int) DeviceQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// MachineIDEq is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) MachineIDEq(machineID string) DeviceQuerySet {
	return qs.w(qs.db.Where("`machine_id` = ?", machineID))
}

// MachineIDGt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) MachineIDGt(machineID string) DeviceQuerySet {
	return qs.w(qs.db.Where("`machine_id` > ?", machineID))
}

// MachineIDGte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) MachineIDGte(machineID string) DeviceQuerySet {
	return qs.w(qs.db.Where("`machine_id` >= ?", machineID))
}

// MachineIDIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) MachineIDIn(machineID ...string) DeviceQuerySet {
	if len(machineID) == 0 {
		qs.db.AddError(errors.New("must at least pass one machineID in MachineIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("machine_id IN (?)", machineID))
}

// MachineIDLike is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) MachineIDLike(machineID string) DeviceQuerySet {
	return qs.w(qs.db.Where("`machine_id` LIKE ?", machineID))
}

// MachineIDLt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) MachineIDLt(machineID string) DeviceQuerySet {
	return qs.w(qs.db.Where("`machine_id` < ?", machineID))
}

// MachineIDLte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) MachineIDLte(machineID string) DeviceQuerySet {
	return qs.w(qs.db.Where("`machine_id` <= ?", machineID))
}

// MachineIDNe is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) MachineIDNe(machineID string) DeviceQuerySet {
	return qs.w(qs.db.Where("`machine_id` != ?", machineID))
}

// MachineIDNotIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) MachineIDNotIn(machineID ...string) DeviceQuerySet {
	if len(machineID) == 0 {
		qs.db.AddError(errors.New("must at least pass one machineID in MachineIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("machine_id NOT IN (?)", machineID))
}

// MachineIDNotlike is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) MachineIDNotlike(machineID string) DeviceQuerySet {
	return qs.w(qs.db.Where("`machine_id` NOT LIKE ?", machineID))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) NameEq(name string) DeviceQuerySet {
	return qs.w(qs.db.Where("`name` = ?", name))
}

// NameGt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) NameGt(name string) DeviceQuerySet {
	return qs.w(qs.db.Where("`name` > ?", name))
}

// NameGte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) NameGte(name string) DeviceQuerySet {
	return qs.w(qs.db.Where("`name` >= ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) NameIn(name ...string) DeviceQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name IN (?)", name))
}

// NameLike is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) NameLike(name string) DeviceQuerySet {
	return qs.w(qs.db.Where("`name` LIKE ?", name))
}

// NameLt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) NameLt(name string) DeviceQuerySet {
	return qs.w(qs.db.Where("`name` < ?", name))
}

// NameLte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) NameLte(name string) DeviceQuerySet {
	return qs.w(qs.db.Where("`name` <= ?", name))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) NameNe(name string) DeviceQuerySet {
	return qs.w(qs.db.Where("`name` != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) NameNotIn(name ...string) DeviceQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", name))
}

// NameNotlike is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) NameNotlike(name string) DeviceQuerySet {
	return qs.w(qs.db.Where("`name` NOT LIKE ?", name))
}

// OSEq is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OSEq(oS string) DeviceQuerySet {
	return qs.w(qs.db.Where("`os` = ?", oS))
}

// OSGt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OSGt(oS string) DeviceQuerySet {
	return qs.w(qs.db.Where("`os` > ?", oS))
}

// OSGte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OSGte(oS string) DeviceQuerySet {
	return qs.w(qs.db.Where("`os` >= ?", oS))
}

// OSIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OSIn(oS ...string) DeviceQuerySet {
	if len(oS) == 0 {
		qs.db.AddError(errors.New("must at least pass one oS in OSIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("os IN (?)", oS))
}

// OSLike is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OSLike(oS string) DeviceQuerySet {
	return qs.w(qs.db.Where("`os` LIKE ?", oS))
}

// OSLt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OSLt(oS string) DeviceQuerySet {
	return qs.w(qs.db.Where("`os` < ?", oS))
}

// OSLte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OSLte(oS string) DeviceQuerySet {
	return qs.w(qs.db.Where("`os` <= ?", oS))
}

// OSNe is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OSNe(oS string) DeviceQuerySet {
	return qs.w(qs.db.Where("`os` != ?", oS))
}

// OSNotIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OSNotIn(oS ...string) DeviceQuerySet {
	if len(oS) == 0 {
		qs.db.AddError(errors.New("must at least pass one oS in OSNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("os NOT IN (?)", oS))
}

// OSNotlike is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OSNotlike(oS string) DeviceQuerySet {
	return qs.w(qs.db.Where("`os` NOT LIKE ?", oS))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) Offset(offset int) DeviceQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs DeviceQuerySet) One(ret *Device) error {
	return qs.db.First(ret).Error
}

// OrderAscByAddress is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderAscByAddress() DeviceQuerySet {
	return qs.w(qs.db.Order("address ASC"))
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderAscByCreatedAt() DeviceQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderAscByDeletedAt() DeviceQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderAscByID() DeviceQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByLastSeen is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderAscByLastSeen() DeviceQuerySet {
	return qs.w(qs.db.Order("last_seen ASC"))
}

// OrderAscByMachineID is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderAscByMachineID() DeviceQuerySet {
	return qs.w(qs.db.Order("machine_id ASC"))
}

// OrderAscByName is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderAscByName() DeviceQuerySet {
	return qs.w(qs.db.Order("name ASC"))
}

// OrderAscByOS is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderAscByOS() DeviceQuerySet {
	return qs.w(qs.db.Order("os ASC"))
}

// OrderAscByRelayServerID is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderAscByRelayServerID() DeviceQuerySet {
	return qs.w(qs.db.Order("relay_server_id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderAscByUpdatedAt() DeviceQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderAscByUserID is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderAscByUserID() DeviceQuerySet {
	return qs.w(qs.db.Order("user_id ASC"))
}

// OrderAscByVersion is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderAscByVersion() DeviceQuerySet {
	return qs.w(qs.db.Order("version ASC"))
}

// OrderDescByAddress is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderDescByAddress() DeviceQuerySet {
	return qs.w(qs.db.Order("address DESC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderDescByCreatedAt() DeviceQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderDescByDeletedAt() DeviceQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderDescByID() DeviceQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByLastSeen is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderDescByLastSeen() DeviceQuerySet {
	return qs.w(qs.db.Order("last_seen DESC"))
}

// OrderDescByMachineID is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderDescByMachineID() DeviceQuerySet {
	return qs.w(qs.db.Order("machine_id DESC"))
}

// OrderDescByName is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderDescByName() DeviceQuerySet {
	return qs.w(qs.db.Order("name DESC"))
}

// OrderDescByOS is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderDescByOS() DeviceQuerySet {
	return qs.w(qs.db.Order("os DESC"))
}

// OrderDescByRelayServerID is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderDescByRelayServerID() DeviceQuerySet {
	return qs.w(qs.db.Order("relay_server_id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderDescByUpdatedAt() DeviceQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// OrderDescByUserID is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderDescByUserID() DeviceQuerySet {
	return qs.w(qs.db.Order("user_id DESC"))
}

// OrderDescByVersion is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) OrderDescByVersion() DeviceQuerySet {
	return qs.w(qs.db.Order("version DESC"))
}

// PreloadUser is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) PreloadUser() DeviceQuerySet {
	return qs.w(qs.db.Preload("User"))
}

// RelayServerIDEq is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) RelayServerIDEq(relayServerID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`relay_server_id` = ?", relayServerID))
}

// RelayServerIDGt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) RelayServerIDGt(relayServerID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`relay_server_id` > ?", relayServerID))
}

// RelayServerIDGte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) RelayServerIDGte(relayServerID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`relay_server_id` >= ?", relayServerID))
}

// RelayServerIDIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) RelayServerIDIn(relayServerID ...ID) DeviceQuerySet {
	if len(relayServerID) == 0 {
		qs.db.AddError(errors.New("must at least pass one relayServerID in RelayServerIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("relay_server_id IN (?)", relayServerID))
}

// RelayServerIDLt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) RelayServerIDLt(relayServerID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`relay_server_id` < ?", relayServerID))
}

// RelayServerIDLte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) RelayServerIDLte(relayServerID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`relay_server_id` <= ?", relayServerID))
}

// RelayServerIDNe is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) RelayServerIDNe(relayServerID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`relay_server_id` != ?", relayServerID))
}

// RelayServerIDNotIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) RelayServerIDNotIn(relayServerID ...ID) DeviceQuerySet {
	if len(relayServerID) == 0 {
		qs.db.AddError(errors.New("must at least pass one relayServerID in RelayServerIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("relay_server_id NOT IN (?)", relayServerID))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UpdatedAtEq(updatedAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`updated_at` = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UpdatedAtGt(updatedAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`updated_at` > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UpdatedAtGte(updatedAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`updated_at` >= ?", updatedAt))
}

// UpdatedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UpdatedAtIsNotNull() DeviceQuerySet {
	return qs.w(qs.db.Where("updated_at IS NOT NULL"))
}

// UpdatedAtIsNull is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UpdatedAtIsNull() DeviceQuerySet {
	return qs.w(qs.db.Where("updated_at IS NULL"))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UpdatedAtLt(updatedAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`updated_at` < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UpdatedAtLte(updatedAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`updated_at` <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UpdatedAtNe(updatedAt time.Time) DeviceQuerySet {
	return qs.w(qs.db.Where("`updated_at` != ?", updatedAt))
}

// UserIDEq is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UserIDEq(userID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`user_id` = ?", userID))
}

// UserIDGt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UserIDGt(userID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`user_id` > ?", userID))
}

// UserIDGte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UserIDGte(userID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`user_id` >= ?", userID))
}

// UserIDIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UserIDIn(userID ...ID) DeviceQuerySet {
	if len(userID) == 0 {
		qs.db.AddError(errors.New("must at least pass one userID in UserIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id IN (?)", userID))
}

// UserIDLt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UserIDLt(userID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`user_id` < ?", userID))
}

// UserIDLte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UserIDLte(userID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`user_id` <= ?", userID))
}

// UserIDNe is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UserIDNe(userID ID) DeviceQuerySet {
	return qs.w(qs.db.Where("`user_id` != ?", userID))
}

// UserIDNotIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UserIDNotIn(userID ...ID) DeviceQuerySet {
	if len(userID) == 0 {
		qs.db.AddError(errors.New("must at least pass one userID in UserIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id NOT IN (?)", userID))
}

// UserIsNotNull is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UserIsNotNull() DeviceQuerySet {
	return qs.w(qs.db.Where("user IS NOT NULL"))
}

// UserIsNull is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) UserIsNull() DeviceQuerySet {
	return qs.w(qs.db.Where("user IS NULL"))
}

// VersionEq is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) VersionEq(version string) DeviceQuerySet {
	return qs.w(qs.db.Where("`version` = ?", version))
}

// VersionGt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) VersionGt(version string) DeviceQuerySet {
	return qs.w(qs.db.Where("`version` > ?", version))
}

// VersionGte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) VersionGte(version string) DeviceQuerySet {
	return qs.w(qs.db.Where("`version` >= ?", version))
}

// VersionIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) VersionIn(version ...string) DeviceQuerySet {
	if len(version) == 0 {
		qs.db.AddError(errors.New("must at least pass one version in VersionIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("version IN (?)", version))
}

// VersionLike is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) VersionLike(version string) DeviceQuerySet {
	return qs.w(qs.db.Where("`version` LIKE ?", version))
}

// VersionLt is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) VersionLt(version string) DeviceQuerySet {
	return qs.w(qs.db.Where("`version` < ?", version))
}

// VersionLte is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) VersionLte(version string) DeviceQuerySet {
	return qs.w(qs.db.Where("`version` <= ?", version))
}

// VersionNe is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) VersionNe(version string) DeviceQuerySet {
	return qs.w(qs.db.Where("`version` != ?", version))
}

// VersionNotIn is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) VersionNotIn(version ...string) DeviceQuerySet {
	if len(version) == 0 {
		qs.db.AddError(errors.New("must at least pass one version in VersionNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("version NOT IN (?)", version))
}

// VersionNotlike is an autogenerated method
// nolint: dupl
func (qs DeviceQuerySet) VersionNotlike(version string) DeviceQuerySet {
	return qs.w(qs.db.Where("`version` NOT LIKE ?", version))
}

// SetAddress is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) SetAddress(address string) DeviceUpdater {
	u.fields[string(DeviceDBSchema.Address)] = address
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) SetCreatedAt(createdAt time.Time) DeviceUpdater {
	u.fields[string(DeviceDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) SetDeletedAt(deletedAt *time.Time) DeviceUpdater {
	u.fields[string(DeviceDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) SetID(ID ID) DeviceUpdater {
	u.fields[string(DeviceDBSchema.ID)] = ID
	return u
}

// SetLastSeen is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) SetLastSeen(lastSeen time.Time) DeviceUpdater {
	u.fields[string(DeviceDBSchema.LastSeen)] = lastSeen
	return u
}

// SetMachineID is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) SetMachineID(machineID string) DeviceUpdater {
	u.fields[string(DeviceDBSchema.MachineID)] = machineID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) SetName(name string) DeviceUpdater {
	u.fields[string(DeviceDBSchema.Name)] = name
	return u
}

// SetOS is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) SetOS(oS string) DeviceUpdater {
	u.fields[string(DeviceDBSchema.OS)] = oS
	return u
}

// SetRelayServerID is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) SetRelayServerID(relayServerID ID) DeviceUpdater {
	u.fields[string(DeviceDBSchema.RelayServerID)] = relayServerID
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) SetUpdatedAt(updatedAt *time.Time) DeviceUpdater {
	u.fields[string(DeviceDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SetUserID is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) SetUserID(userID ID) DeviceUpdater {
	u.fields[string(DeviceDBSchema.UserID)] = userID
	return u
}

// SetVersion is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) SetVersion(version string) DeviceUpdater {
	u.fields[string(DeviceDBSchema.Version)] = version
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u DeviceUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set DeviceQuerySet

// ===== BEGIN of Device modifiers

// DeviceDBSchemaField describes database schema field. It requires for method 'Update'
type DeviceDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f DeviceDBSchemaField) String() string {
	return string(f)
}

// DeviceDBSchema stores db field names of Device
var DeviceDBSchema = struct {
	ID            DeviceDBSchemaField
	CreatedAt     DeviceDBSchemaField
	UpdatedAt     DeviceDBSchemaField
	DeletedAt     DeviceDBSchemaField
	UserID        DeviceDBSchemaField
	User          DeviceDBSchemaField
	RelayServerID DeviceDBSchemaField
	Name          DeviceDBSchemaField
	OS            DeviceDBSchemaField
	Version       DeviceDBSchemaField
	MachineID     DeviceDBSchemaField
	LastSeen      DeviceDBSchemaField
	Address       DeviceDBSchemaField
}{

	ID:            DeviceDBSchemaField("id"),
	CreatedAt:     DeviceDBSchemaField("created_at"),
	UpdatedAt:     DeviceDBSchemaField("updated_at"),
	DeletedAt:     DeviceDBSchemaField("deleted_at"),
	UserID:        DeviceDBSchemaField("user_id"),
	User:          DeviceDBSchemaField("user"),
	RelayServerID: DeviceDBSchemaField("relay_server_id"),
	Name:          DeviceDBSchemaField("name"),
	OS:            DeviceDBSchemaField("os"),
	Version:       DeviceDBSchemaField("version"),
	MachineID:     DeviceDBSchemaField("machine_id"),
	LastSeen:      DeviceDBSchemaField("last_seen"),
	Address:       DeviceDBSchemaField("address"),
}

// Update updates Device fields by primary key
// nolint: dupl
func (o *Device) Update(db *gorm.DB, fields ...DeviceDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":              o.ID,
		"created_at":      o.CreatedAt,
		"updated_at":      o.UpdatedAt,
		"deleted_at":      o.DeletedAt,
		"user_id":         o.UserID,
		"user":            o.User,
		"relay_server_id": o.RelayServerID,
		"name":            o.Name,
		"os":              o.OS,
		"version":         o.Version,
		"machine_id":      o.MachineID,
		"last_seen":       o.LastSeen,
		"address":         o.Address,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Device %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// DeviceUpdater is an Device updates manager
type DeviceUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewDeviceUpdater creates new Device updater
// nolint: dupl
func NewDeviceUpdater(db *gorm.DB) DeviceUpdater {
	return DeviceUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Device{}),
	}
}

// ===== END of Device modifiers

// ===== BEGIN of query set GithubUserQuerySet

// GithubUserQuerySet is an queryset type for GithubUser
type GithubUserQuerySet struct {
	db *gorm.DB
}

// NewGithubUserQuerySet constructs new GithubUserQuerySet
func NewGithubUserQuerySet(db *gorm.DB) GithubUserQuerySet {
	return GithubUserQuerySet{
		db: db.Model(&GithubUser{}),
	}
}

func (qs GithubUserQuerySet) w(db *gorm.DB) GithubUserQuerySet {
	return NewGithubUserQuerySet(db)
}

func (qs GithubUserQuerySet) Preload(query string, args ...interface{}) GithubUserQuerySet {
	return NewGithubUserQuerySet(qs.db.Preload(query, args...))
}

// Preload preload associations with given conditions
//    db.Preload("Orders", "state NOT IN (?)", "cancelled").Find(&users)
func (qs GithubUserQuerySet) Select(fields ...GithubUserDBSchemaField) GithubUserQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *GithubUser) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *GithubUser) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) All(ret *[]GithubUser) error {
	return qs.db.Find(ret).Error
}

// AvatarURLEq is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) AvatarURLEq(avatarURL string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`avatar_url` = ?", avatarURL))
}

// AvatarURLGt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) AvatarURLGt(avatarURL string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`avatar_url` > ?", avatarURL))
}

// AvatarURLGte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) AvatarURLGte(avatarURL string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`avatar_url` >= ?", avatarURL))
}

// AvatarURLIn is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) AvatarURLIn(avatarURL ...string) GithubUserQuerySet {
	if len(avatarURL) == 0 {
		qs.db.AddError(errors.New("must at least pass one avatarURL in AvatarURLIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("avatar_url IN (?)", avatarURL))
}

// AvatarURLLike is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) AvatarURLLike(avatarURL string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`avatar_url` LIKE ?", avatarURL))
}

// AvatarURLLt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) AvatarURLLt(avatarURL string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`avatar_url` < ?", avatarURL))
}

// AvatarURLLte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) AvatarURLLte(avatarURL string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`avatar_url` <= ?", avatarURL))
}

// AvatarURLNe is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) AvatarURLNe(avatarURL string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`avatar_url` != ?", avatarURL))
}

// AvatarURLNotIn is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) AvatarURLNotIn(avatarURL ...string) GithubUserQuerySet {
	if len(avatarURL) == 0 {
		qs.db.AddError(errors.New("must at least pass one avatarURL in AvatarURLNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("avatar_url NOT IN (?)", avatarURL))
}

// AvatarURLNotlike is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) AvatarURLNotlike(avatarURL string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`avatar_url` NOT LIKE ?", avatarURL))
}

// Count is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) CreatedAtEq(createdAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`created_at` = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) CreatedAtGt(createdAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`created_at` > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) CreatedAtGte(createdAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`created_at` >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) CreatedAtLt(createdAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`created_at` < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) CreatedAtLte(createdAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`created_at` <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) CreatedAtNe(createdAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`created_at` != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) Delete() error {
	return qs.db.Delete(GithubUser{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(GithubUser{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(GithubUser{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) DeletedAtEq(deletedAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) DeletedAtGt(deletedAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) DeletedAtGte(deletedAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) DeletedAtIsNotNull() GithubUserQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) DeletedAtIsNull() GithubUserQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) DeletedAtLt(deletedAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) DeletedAtLte(deletedAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) DeletedAtNe(deletedAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` != ?", deletedAt))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) GetUpdater() GithubUserUpdater {
	return NewGithubUserUpdater(qs.db)
}

// GithubIDEq is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) GithubIDEq(githubID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`github_id` = ?", githubID))
}

// GithubIDGt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) GithubIDGt(githubID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`github_id` > ?", githubID))
}

// GithubIDGte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) GithubIDGte(githubID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`github_id` >= ?", githubID))
}

// GithubIDIn is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) GithubIDIn(githubID ...ID) GithubUserQuerySet {
	if len(githubID) == 0 {
		qs.db.AddError(errors.New("must at least pass one githubID in GithubIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("github_id IN (?)", githubID))
}

// GithubIDLt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) GithubIDLt(githubID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`github_id` < ?", githubID))
}

// GithubIDLte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) GithubIDLte(githubID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`github_id` <= ?", githubID))
}

// GithubIDNe is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) GithubIDNe(githubID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`github_id` != ?", githubID))
}

// GithubIDNotIn is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) GithubIDNotIn(githubID ...ID) GithubUserQuerySet {
	if len(githubID) == 0 {
		qs.db.AddError(errors.New("must at least pass one githubID in GithubIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("github_id NOT IN (?)", githubID))
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) IDEq(ID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`id` = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) IDGt(ID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`id` > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) IDGte(ID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`id` >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) IDIn(ID ...ID) GithubUserQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) IDLt(ID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`id` < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) IDLte(ID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`id` <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) IDNe(ID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`id` != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) IDNotIn(ID ...ID) GithubUserQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) Limit(limit int) GithubUserQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// LocationEq is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LocationEq(location string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`location` = ?", location))
}

// LocationGt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LocationGt(location string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`location` > ?", location))
}

// LocationGte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LocationGte(location string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`location` >= ?", location))
}

// LocationIn is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LocationIn(location ...string) GithubUserQuerySet {
	if len(location) == 0 {
		qs.db.AddError(errors.New("must at least pass one location in LocationIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("location IN (?)", location))
}

// LocationLike is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LocationLike(location string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`location` LIKE ?", location))
}

// LocationLt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LocationLt(location string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`location` < ?", location))
}

// LocationLte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LocationLte(location string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`location` <= ?", location))
}

// LocationNe is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LocationNe(location string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`location` != ?", location))
}

// LocationNotIn is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LocationNotIn(location ...string) GithubUserQuerySet {
	if len(location) == 0 {
		qs.db.AddError(errors.New("must at least pass one location in LocationNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("location NOT IN (?)", location))
}

// LocationNotlike is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LocationNotlike(location string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`location` NOT LIKE ?", location))
}

// LoginEq is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LoginEq(login string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`login` = ?", login))
}

// LoginGt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LoginGt(login string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`login` > ?", login))
}

// LoginGte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LoginGte(login string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`login` >= ?", login))
}

// LoginIn is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LoginIn(login ...string) GithubUserQuerySet {
	if len(login) == 0 {
		qs.db.AddError(errors.New("must at least pass one login in LoginIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("login IN (?)", login))
}

// LoginLike is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LoginLike(login string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`login` LIKE ?", login))
}

// LoginLt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LoginLt(login string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`login` < ?", login))
}

// LoginLte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LoginLte(login string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`login` <= ?", login))
}

// LoginNe is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LoginNe(login string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`login` != ?", login))
}

// LoginNotIn is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LoginNotIn(login ...string) GithubUserQuerySet {
	if len(login) == 0 {
		qs.db.AddError(errors.New("must at least pass one login in LoginNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("login NOT IN (?)", login))
}

// LoginNotlike is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) LoginNotlike(login string) GithubUserQuerySet {
	return qs.w(qs.db.Where("`login` NOT LIKE ?", login))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) Offset(offset int) GithubUserQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs GithubUserQuerySet) One(ret *GithubUser) error {
	return qs.db.First(ret).Error
}

// OrderAscByAvatarURL is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderAscByAvatarURL() GithubUserQuerySet {
	return qs.w(qs.db.Order("avatar_url ASC"))
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderAscByCreatedAt() GithubUserQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderAscByDeletedAt() GithubUserQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByGithubID is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderAscByGithubID() GithubUserQuerySet {
	return qs.w(qs.db.Order("github_id ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderAscByID() GithubUserQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByLocation is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderAscByLocation() GithubUserQuerySet {
	return qs.w(qs.db.Order("location ASC"))
}

// OrderAscByLogin is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderAscByLogin() GithubUserQuerySet {
	return qs.w(qs.db.Order("login ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderAscByUpdatedAt() GithubUserQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderAscByUserID is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderAscByUserID() GithubUserQuerySet {
	return qs.w(qs.db.Order("user_id ASC"))
}

// OrderDescByAvatarURL is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderDescByAvatarURL() GithubUserQuerySet {
	return qs.w(qs.db.Order("avatar_url DESC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderDescByCreatedAt() GithubUserQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderDescByDeletedAt() GithubUserQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByGithubID is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderDescByGithubID() GithubUserQuerySet {
	return qs.w(qs.db.Order("github_id DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderDescByID() GithubUserQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByLocation is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderDescByLocation() GithubUserQuerySet {
	return qs.w(qs.db.Order("location DESC"))
}

// OrderDescByLogin is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderDescByLogin() GithubUserQuerySet {
	return qs.w(qs.db.Order("login DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderDescByUpdatedAt() GithubUserQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// OrderDescByUserID is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) OrderDescByUserID() GithubUserQuerySet {
	return qs.w(qs.db.Order("user_id DESC"))
}

// PreloadUser is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) PreloadUser() GithubUserQuerySet {
	return qs.w(qs.db.Preload("User"))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UpdatedAtEq(updatedAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UpdatedAtGt(updatedAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UpdatedAtGte(updatedAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` >= ?", updatedAt))
}

// UpdatedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UpdatedAtIsNotNull() GithubUserQuerySet {
	return qs.w(qs.db.Where("updated_at IS NOT NULL"))
}

// UpdatedAtIsNull is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UpdatedAtIsNull() GithubUserQuerySet {
	return qs.w(qs.db.Where("updated_at IS NULL"))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UpdatedAtLt(updatedAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UpdatedAtLte(updatedAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UpdatedAtNe(updatedAt time.Time) GithubUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` != ?", updatedAt))
}

// UserIDEq is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UserIDEq(userID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`user_id` = ?", userID))
}

// UserIDGt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UserIDGt(userID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`user_id` > ?", userID))
}

// UserIDGte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UserIDGte(userID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`user_id` >= ?", userID))
}

// UserIDIn is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UserIDIn(userID ...ID) GithubUserQuerySet {
	if len(userID) == 0 {
		qs.db.AddError(errors.New("must at least pass one userID in UserIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id IN (?)", userID))
}

// UserIDLt is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UserIDLt(userID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`user_id` < ?", userID))
}

// UserIDLte is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UserIDLte(userID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`user_id` <= ?", userID))
}

// UserIDNe is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UserIDNe(userID ID) GithubUserQuerySet {
	return qs.w(qs.db.Where("`user_id` != ?", userID))
}

// UserIDNotIn is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UserIDNotIn(userID ...ID) GithubUserQuerySet {
	if len(userID) == 0 {
		qs.db.AddError(errors.New("must at least pass one userID in UserIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id NOT IN (?)", userID))
}

// UserIsNotNull is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UserIsNotNull() GithubUserQuerySet {
	return qs.w(qs.db.Where("user IS NOT NULL"))
}

// UserIsNull is an autogenerated method
// nolint: dupl
func (qs GithubUserQuerySet) UserIsNull() GithubUserQuerySet {
	return qs.w(qs.db.Where("user IS NULL"))
}

// SetAvatarURL is an autogenerated method
// nolint: dupl
func (u GithubUserUpdater) SetAvatarURL(avatarURL string) GithubUserUpdater {
	u.fields[string(GithubUserDBSchema.AvatarURL)] = avatarURL
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u GithubUserUpdater) SetCreatedAt(createdAt time.Time) GithubUserUpdater {
	u.fields[string(GithubUserDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u GithubUserUpdater) SetDeletedAt(deletedAt *time.Time) GithubUserUpdater {
	u.fields[string(GithubUserDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetGithubID is an autogenerated method
// nolint: dupl
func (u GithubUserUpdater) SetGithubID(githubID ID) GithubUserUpdater {
	u.fields[string(GithubUserDBSchema.GithubID)] = githubID
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u GithubUserUpdater) SetID(ID ID) GithubUserUpdater {
	u.fields[string(GithubUserDBSchema.ID)] = ID
	return u
}

// SetLocation is an autogenerated method
// nolint: dupl
func (u GithubUserUpdater) SetLocation(location string) GithubUserUpdater {
	u.fields[string(GithubUserDBSchema.Location)] = location
	return u
}

// SetLogin is an autogenerated method
// nolint: dupl
func (u GithubUserUpdater) SetLogin(login string) GithubUserUpdater {
	u.fields[string(GithubUserDBSchema.Login)] = login
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u GithubUserUpdater) SetUpdatedAt(updatedAt *time.Time) GithubUserUpdater {
	u.fields[string(GithubUserDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SetUserID is an autogenerated method
// nolint: dupl
func (u GithubUserUpdater) SetUserID(userID ID) GithubUserUpdater {
	u.fields[string(GithubUserDBSchema.UserID)] = userID
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u GithubUserUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u GithubUserUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set GithubUserQuerySet

// ===== BEGIN of GithubUser modifiers

// GithubUserDBSchemaField describes database schema field. It requires for method 'Update'
type GithubUserDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f GithubUserDBSchemaField) String() string {
	return string(f)
}

// GithubUserDBSchema stores db field names of GithubUser
var GithubUserDBSchema = struct {
	ID        GithubUserDBSchemaField
	CreatedAt GithubUserDBSchemaField
	UpdatedAt GithubUserDBSchemaField
	DeletedAt GithubUserDBSchemaField
	UserID    GithubUserDBSchemaField
	User      GithubUserDBSchemaField
	GithubID  GithubUserDBSchemaField
	Login     GithubUserDBSchemaField
	AvatarURL GithubUserDBSchemaField
	Location  GithubUserDBSchemaField
}{

	ID:        GithubUserDBSchemaField("id"),
	CreatedAt: GithubUserDBSchemaField("created_at"),
	UpdatedAt: GithubUserDBSchemaField("updated_at"),
	DeletedAt: GithubUserDBSchemaField("deleted_at"),
	UserID:    GithubUserDBSchemaField("user_id"),
	User:      GithubUserDBSchemaField("user"),
	GithubID:  GithubUserDBSchemaField("github_id"),
	Login:     GithubUserDBSchemaField("login"),
	AvatarURL: GithubUserDBSchemaField("avatar_url"),
	Location:  GithubUserDBSchemaField("location"),
}

// Update updates GithubUser fields by primary key
// nolint: dupl
func (o *GithubUser) Update(db *gorm.DB, fields ...GithubUserDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"user_id":    o.UserID,
		"user":       o.User,
		"github_id":  o.GithubID,
		"login":      o.Login,
		"avatar_url": o.AvatarURL,
		"location":   o.Location,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update GithubUser %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// GithubUserUpdater is an GithubUser updates manager
type GithubUserUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewGithubUserUpdater creates new GithubUser updater
// nolint: dupl
func NewGithubUserUpdater(db *gorm.DB) GithubUserUpdater {
	return GithubUserUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&GithubUser{}),
	}
}

// ===== END of GithubUser modifiers

// ===== BEGIN of query set InvitationQuerySet

// InvitationQuerySet is an queryset type for Invitation
type InvitationQuerySet struct {
	db *gorm.DB
}

// NewInvitationQuerySet constructs new InvitationQuerySet
func NewInvitationQuerySet(db *gorm.DB) InvitationQuerySet {
	return InvitationQuerySet{
		db: db.Model(&Invitation{}),
	}
}

func (qs InvitationQuerySet) w(db *gorm.DB) InvitationQuerySet {
	return NewInvitationQuerySet(db)
}

func (qs InvitationQuerySet) Preload(query string, args ...interface{}) InvitationQuerySet {
	return NewInvitationQuerySet(qs.db.Preload(query, args...))
}

// Preload preload associations with given conditions
//    db.Preload("Orders", "state NOT IN (?)", "cancelled").Find(&users)
func (qs InvitationQuerySet) Select(fields ...InvitationDBSchemaField) InvitationQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *Invitation) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Invitation) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) All(ret *[]Invitation) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) CreatedAtEq(createdAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`created_at` = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) CreatedAtGt(createdAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`created_at` > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) CreatedAtGte(createdAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`created_at` >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) CreatedAtLt(createdAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`created_at` < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) CreatedAtLte(createdAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`created_at` <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) CreatedAtNe(createdAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`created_at` != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) Delete() error {
	return qs.db.Delete(Invitation{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(Invitation{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(Invitation{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) DeletedAtEq(deletedAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`deleted_at` = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) DeletedAtGt(deletedAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`deleted_at` > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) DeletedAtGte(deletedAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`deleted_at` >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) DeletedAtIsNotNull() InvitationQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) DeletedAtIsNull() InvitationQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) DeletedAtLt(deletedAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`deleted_at` < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) DeletedAtLte(deletedAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`deleted_at` <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) DeletedAtNe(deletedAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`deleted_at` != ?", deletedAt))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) GetUpdater() InvitationUpdater {
	return NewInvitationUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) IDEq(ID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`id` = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) IDGt(ID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`id` > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) IDGte(ID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`id` >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) IDIn(ID ...ID) InvitationQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) IDLt(ID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`id` < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) IDLte(ID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`id` <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) IDNe(ID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`id` != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) IDNotIn(ID ...ID) InvitationQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// InvitedByIDEq is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) InvitedByIDEq(invitedByID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`invited_by_id` = ?", invitedByID))
}

// InvitedByIDGt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) InvitedByIDGt(invitedByID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`invited_by_id` > ?", invitedByID))
}

// InvitedByIDGte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) InvitedByIDGte(invitedByID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`invited_by_id` >= ?", invitedByID))
}

// InvitedByIDIn is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) InvitedByIDIn(invitedByID ...ID) InvitationQuerySet {
	if len(invitedByID) == 0 {
		qs.db.AddError(errors.New("must at least pass one invitedByID in InvitedByIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("invited_by_id IN (?)", invitedByID))
}

// InvitedByIDLt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) InvitedByIDLt(invitedByID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`invited_by_id` < ?", invitedByID))
}

// InvitedByIDLte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) InvitedByIDLte(invitedByID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`invited_by_id` <= ?", invitedByID))
}

// InvitedByIDNe is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) InvitedByIDNe(invitedByID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`invited_by_id` != ?", invitedByID))
}

// InvitedByIDNotIn is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) InvitedByIDNotIn(invitedByID ...ID) InvitationQuerySet {
	if len(invitedByID) == 0 {
		qs.db.AddError(errors.New("must at least pass one invitedByID in InvitedByIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("invited_by_id NOT IN (?)", invitedByID))
}

// InvitedByIsNotNull is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) InvitedByIsNotNull() InvitationQuerySet {
	return qs.w(qs.db.Where("invited_by IS NOT NULL"))
}

// InvitedByIsNull is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) InvitedByIsNull() InvitationQuerySet {
	return qs.w(qs.db.Where("invited_by IS NULL"))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) Limit(limit int) InvitationQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NetworkIDEq is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) NetworkIDEq(networkID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`network_id` = ?", networkID))
}

// NetworkIDGt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) NetworkIDGt(networkID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`network_id` > ?", networkID))
}

// NetworkIDGte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) NetworkIDGte(networkID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`network_id` >= ?", networkID))
}

// NetworkIDIn is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) NetworkIDIn(networkID ...ID) InvitationQuerySet {
	if len(networkID) == 0 {
		qs.db.AddError(errors.New("must at least pass one networkID in NetworkIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("network_id IN (?)", networkID))
}

// NetworkIDLt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) NetworkIDLt(networkID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`network_id` < ?", networkID))
}

// NetworkIDLte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) NetworkIDLte(networkID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`network_id` <= ?", networkID))
}

// NetworkIDNe is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) NetworkIDNe(networkID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`network_id` != ?", networkID))
}

// NetworkIDNotIn is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) NetworkIDNotIn(networkID ...ID) InvitationQuerySet {
	if len(networkID) == 0 {
		qs.db.AddError(errors.New("must at least pass one networkID in NetworkIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("network_id NOT IN (?)", networkID))
}

// NetworkIsNotNull is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) NetworkIsNotNull() InvitationQuerySet {
	return qs.w(qs.db.Where("network IS NOT NULL"))
}

// NetworkIsNull is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) NetworkIsNull() InvitationQuerySet {
	return qs.w(qs.db.Where("network IS NULL"))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) Offset(offset int) InvitationQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs InvitationQuerySet) One(ret *Invitation) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderAscByCreatedAt() InvitationQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderAscByDeletedAt() InvitationQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderAscByID() InvitationQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByInvitedByID is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderAscByInvitedByID() InvitationQuerySet {
	return qs.w(qs.db.Order("invited_by_id ASC"))
}

// OrderAscByNetworkID is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderAscByNetworkID() InvitationQuerySet {
	return qs.w(qs.db.Order("network_id ASC"))
}

// OrderAscByRole is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderAscByRole() InvitationQuerySet {
	return qs.w(qs.db.Order("role ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderAscByUpdatedAt() InvitationQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderAscByUserID is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderAscByUserID() InvitationQuerySet {
	return qs.w(qs.db.Order("user_id ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderDescByCreatedAt() InvitationQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderDescByDeletedAt() InvitationQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderDescByID() InvitationQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByInvitedByID is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderDescByInvitedByID() InvitationQuerySet {
	return qs.w(qs.db.Order("invited_by_id DESC"))
}

// OrderDescByNetworkID is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderDescByNetworkID() InvitationQuerySet {
	return qs.w(qs.db.Order("network_id DESC"))
}

// OrderDescByRole is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderDescByRole() InvitationQuerySet {
	return qs.w(qs.db.Order("role DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderDescByUpdatedAt() InvitationQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// OrderDescByUserID is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) OrderDescByUserID() InvitationQuerySet {
	return qs.w(qs.db.Order("user_id DESC"))
}

// PreloadInvitedBy is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) PreloadInvitedBy() InvitationQuerySet {
	return qs.w(qs.db.Preload("InvitedBy"))
}

// PreloadNetwork is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) PreloadNetwork() InvitationQuerySet {
	return qs.w(qs.db.Preload("Network"))
}

// PreloadUser is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) PreloadUser() InvitationQuerySet {
	return qs.w(qs.db.Preload("User"))
}

// RoleEq is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) RoleEq(role RoleType) InvitationQuerySet {
	return qs.w(qs.db.Where("`role` = ?", role))
}

// RoleGt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) RoleGt(role RoleType) InvitationQuerySet {
	return qs.w(qs.db.Where("`role` > ?", role))
}

// RoleGte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) RoleGte(role RoleType) InvitationQuerySet {
	return qs.w(qs.db.Where("`role` >= ?", role))
}

// RoleIn is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) RoleIn(role ...RoleType) InvitationQuerySet {
	if len(role) == 0 {
		qs.db.AddError(errors.New("must at least pass one role in RoleIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("role IN (?)", role))
}

// RoleLike is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) RoleLike(role RoleType) InvitationQuerySet {
	return qs.w(qs.db.Where("`role` LIKE ?", role))
}

// RoleLt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) RoleLt(role RoleType) InvitationQuerySet {
	return qs.w(qs.db.Where("`role` < ?", role))
}

// RoleLte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) RoleLte(role RoleType) InvitationQuerySet {
	return qs.w(qs.db.Where("`role` <= ?", role))
}

// RoleNe is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) RoleNe(role RoleType) InvitationQuerySet {
	return qs.w(qs.db.Where("`role` != ?", role))
}

// RoleNotIn is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) RoleNotIn(role ...RoleType) InvitationQuerySet {
	if len(role) == 0 {
		qs.db.AddError(errors.New("must at least pass one role in RoleNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("role NOT IN (?)", role))
}

// RoleNotlike is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) RoleNotlike(role RoleType) InvitationQuerySet {
	return qs.w(qs.db.Where("`role` NOT LIKE ?", role))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UpdatedAtEq(updatedAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`updated_at` = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UpdatedAtGt(updatedAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`updated_at` > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UpdatedAtGte(updatedAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`updated_at` >= ?", updatedAt))
}

// UpdatedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UpdatedAtIsNotNull() InvitationQuerySet {
	return qs.w(qs.db.Where("updated_at IS NOT NULL"))
}

// UpdatedAtIsNull is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UpdatedAtIsNull() InvitationQuerySet {
	return qs.w(qs.db.Where("updated_at IS NULL"))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UpdatedAtLt(updatedAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`updated_at` < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UpdatedAtLte(updatedAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`updated_at` <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UpdatedAtNe(updatedAt time.Time) InvitationQuerySet {
	return qs.w(qs.db.Where("`updated_at` != ?", updatedAt))
}

// UserIDEq is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UserIDEq(userID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`user_id` = ?", userID))
}

// UserIDGt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UserIDGt(userID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`user_id` > ?", userID))
}

// UserIDGte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UserIDGte(userID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`user_id` >= ?", userID))
}

// UserIDIn is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UserIDIn(userID ...ID) InvitationQuerySet {
	if len(userID) == 0 {
		qs.db.AddError(errors.New("must at least pass one userID in UserIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id IN (?)", userID))
}

// UserIDLt is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UserIDLt(userID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`user_id` < ?", userID))
}

// UserIDLte is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UserIDLte(userID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`user_id` <= ?", userID))
}

// UserIDNe is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UserIDNe(userID ID) InvitationQuerySet {
	return qs.w(qs.db.Where("`user_id` != ?", userID))
}

// UserIDNotIn is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UserIDNotIn(userID ...ID) InvitationQuerySet {
	if len(userID) == 0 {
		qs.db.AddError(errors.New("must at least pass one userID in UserIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id NOT IN (?)", userID))
}

// UserIsNotNull is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UserIsNotNull() InvitationQuerySet {
	return qs.w(qs.db.Where("user IS NOT NULL"))
}

// UserIsNull is an autogenerated method
// nolint: dupl
func (qs InvitationQuerySet) UserIsNull() InvitationQuerySet {
	return qs.w(qs.db.Where("user IS NULL"))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u InvitationUpdater) SetCreatedAt(createdAt time.Time) InvitationUpdater {
	u.fields[string(InvitationDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u InvitationUpdater) SetDeletedAt(deletedAt *time.Time) InvitationUpdater {
	u.fields[string(InvitationDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u InvitationUpdater) SetID(ID ID) InvitationUpdater {
	u.fields[string(InvitationDBSchema.ID)] = ID
	return u
}

// SetInvitedByID is an autogenerated method
// nolint: dupl
func (u InvitationUpdater) SetInvitedByID(invitedByID ID) InvitationUpdater {
	u.fields[string(InvitationDBSchema.InvitedByID)] = invitedByID
	return u
}

// SetNetworkID is an autogenerated method
// nolint: dupl
func (u InvitationUpdater) SetNetworkID(networkID ID) InvitationUpdater {
	u.fields[string(InvitationDBSchema.NetworkID)] = networkID
	return u
}

// SetRole is an autogenerated method
// nolint: dupl
func (u InvitationUpdater) SetRole(role RoleType) InvitationUpdater {
	u.fields[string(InvitationDBSchema.Role)] = role
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u InvitationUpdater) SetUpdatedAt(updatedAt *time.Time) InvitationUpdater {
	u.fields[string(InvitationDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SetUserID is an autogenerated method
// nolint: dupl
func (u InvitationUpdater) SetUserID(userID ID) InvitationUpdater {
	u.fields[string(InvitationDBSchema.UserID)] = userID
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u InvitationUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u InvitationUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set InvitationQuerySet

// ===== BEGIN of Invitation modifiers

// InvitationDBSchemaField describes database schema field. It requires for method 'Update'
type InvitationDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f InvitationDBSchemaField) String() string {
	return string(f)
}

// InvitationDBSchema stores db field names of Invitation
var InvitationDBSchema = struct {
	ID          InvitationDBSchemaField
	CreatedAt   InvitationDBSchemaField
	UpdatedAt   InvitationDBSchemaField
	DeletedAt   InvitationDBSchemaField
	NetworkID   InvitationDBSchemaField
	Network     InvitationDBSchemaField
	InvitedByID InvitationDBSchemaField
	InvitedBy   InvitationDBSchemaField
	UserID      InvitationDBSchemaField
	User        InvitationDBSchemaField
	Role        InvitationDBSchemaField
}{

	ID:          InvitationDBSchemaField("id"),
	CreatedAt:   InvitationDBSchemaField("created_at"),
	UpdatedAt:   InvitationDBSchemaField("updated_at"),
	DeletedAt:   InvitationDBSchemaField("deleted_at"),
	NetworkID:   InvitationDBSchemaField("network_id"),
	Network:     InvitationDBSchemaField("network"),
	InvitedByID: InvitationDBSchemaField("invited_by_id"),
	InvitedBy:   InvitationDBSchemaField("invited_by"),
	UserID:      InvitationDBSchemaField("user_id"),
	User:        InvitationDBSchemaField("user"),
	Role:        InvitationDBSchemaField("role"),
}

// Update updates Invitation fields by primary key
// nolint: dupl
func (o *Invitation) Update(db *gorm.DB, fields ...InvitationDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":            o.ID,
		"created_at":    o.CreatedAt,
		"updated_at":    o.UpdatedAt,
		"deleted_at":    o.DeletedAt,
		"network_id":    o.NetworkID,
		"network":       o.Network,
		"invited_by_id": o.InvitedByID,
		"invited_by":    o.InvitedBy,
		"user_id":       o.UserID,
		"user":          o.User,
		"role":          o.Role,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Invitation %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// InvitationUpdater is an Invitation updates manager
type InvitationUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewInvitationUpdater creates new Invitation updater
// nolint: dupl
func NewInvitationUpdater(db *gorm.DB) InvitationUpdater {
	return InvitationUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Invitation{}),
	}
}

// ===== END of Invitation modifiers

// ===== BEGIN of query set NetworkQuerySet

// NetworkQuerySet is an queryset type for Network
type NetworkQuerySet struct {
	db *gorm.DB
}

// NewNetworkQuerySet constructs new NetworkQuerySet
func NewNetworkQuerySet(db *gorm.DB) NetworkQuerySet {
	return NetworkQuerySet{
		db: db.Model(&Network{}),
	}
}

func (qs NetworkQuerySet) w(db *gorm.DB) NetworkQuerySet {
	return NewNetworkQuerySet(db)
}

func (qs NetworkQuerySet) Preload(query string, args ...interface{}) NetworkQuerySet {
	return NewNetworkQuerySet(qs.db.Preload(query, args...))
}

// Preload preload associations with given conditions
//    db.Preload("Orders", "state NOT IN (?)", "cancelled").Find(&users)
func (qs NetworkQuerySet) Select(fields ...NetworkDBSchemaField) NetworkQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *Network) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Network) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) All(ret *[]Network) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedAtEq(createdAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`created_at` = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedAtGt(createdAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`created_at` > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedAtGte(createdAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`created_at` >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedAtLt(createdAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`created_at` < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedAtLte(createdAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`created_at` <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedAtNe(createdAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`created_at` != ?", createdAt))
}

// CreatedByIDEq is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedByIDEq(createdByID ID) NetworkQuerySet {
	return qs.w(qs.db.Where("`created_by_id` = ?", createdByID))
}

// CreatedByIDGt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedByIDGt(createdByID ID) NetworkQuerySet {
	return qs.w(qs.db.Where("`created_by_id` > ?", createdByID))
}

// CreatedByIDGte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedByIDGte(createdByID ID) NetworkQuerySet {
	return qs.w(qs.db.Where("`created_by_id` >= ?", createdByID))
}

// CreatedByIDIn is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedByIDIn(createdByID ...ID) NetworkQuerySet {
	if len(createdByID) == 0 {
		qs.db.AddError(errors.New("must at least pass one createdByID in CreatedByIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("created_by_id IN (?)", createdByID))
}

// CreatedByIDLt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedByIDLt(createdByID ID) NetworkQuerySet {
	return qs.w(qs.db.Where("`created_by_id` < ?", createdByID))
}

// CreatedByIDLte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedByIDLte(createdByID ID) NetworkQuerySet {
	return qs.w(qs.db.Where("`created_by_id` <= ?", createdByID))
}

// CreatedByIDNe is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedByIDNe(createdByID ID) NetworkQuerySet {
	return qs.w(qs.db.Where("`created_by_id` != ?", createdByID))
}

// CreatedByIDNotIn is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedByIDNotIn(createdByID ...ID) NetworkQuerySet {
	if len(createdByID) == 0 {
		qs.db.AddError(errors.New("must at least pass one createdByID in CreatedByIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("created_by_id NOT IN (?)", createdByID))
}

// CreatedByIsNotNull is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedByIsNotNull() NetworkQuerySet {
	return qs.w(qs.db.Where("created_by IS NOT NULL"))
}

// CreatedByIsNull is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) CreatedByIsNull() NetworkQuerySet {
	return qs.w(qs.db.Where("created_by IS NULL"))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) Delete() error {
	return qs.db.Delete(Network{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(Network{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(Network{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DeletedAtEq(deletedAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`deleted_at` = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DeletedAtGt(deletedAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`deleted_at` > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DeletedAtGte(deletedAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`deleted_at` >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DeletedAtIsNotNull() NetworkQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DeletedAtIsNull() NetworkQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DeletedAtLt(deletedAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`deleted_at` < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DeletedAtLte(deletedAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`deleted_at` <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DeletedAtNe(deletedAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`deleted_at` != ?", deletedAt))
}

// DescriptionEq is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DescriptionEq(description string) NetworkQuerySet {
	return qs.w(qs.db.Where("`description` = ?", description))
}

// DescriptionGt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DescriptionGt(description string) NetworkQuerySet {
	return qs.w(qs.db.Where("`description` > ?", description))
}

// DescriptionGte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DescriptionGte(description string) NetworkQuerySet {
	return qs.w(qs.db.Where("`description` >= ?", description))
}

// DescriptionIn is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DescriptionIn(description ...string) NetworkQuerySet {
	if len(description) == 0 {
		qs.db.AddError(errors.New("must at least pass one description in DescriptionIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("description IN (?)", description))
}

// DescriptionLike is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DescriptionLike(description string) NetworkQuerySet {
	return qs.w(qs.db.Where("`description` LIKE ?", description))
}

// DescriptionLt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DescriptionLt(description string) NetworkQuerySet {
	return qs.w(qs.db.Where("`description` < ?", description))
}

// DescriptionLte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DescriptionLte(description string) NetworkQuerySet {
	return qs.w(qs.db.Where("`description` <= ?", description))
}

// DescriptionNe is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DescriptionNe(description string) NetworkQuerySet {
	return qs.w(qs.db.Where("`description` != ?", description))
}

// DescriptionNotIn is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DescriptionNotIn(description ...string) NetworkQuerySet {
	if len(description) == 0 {
		qs.db.AddError(errors.New("must at least pass one description in DescriptionNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("description NOT IN (?)", description))
}

// DescriptionNotlike is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) DescriptionNotlike(description string) NetworkQuerySet {
	return qs.w(qs.db.Where("`description` NOT LIKE ?", description))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) GetUpdater() NetworkUpdater {
	return NewNetworkUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) IDEq(ID ID) NetworkQuerySet {
	return qs.w(qs.db.Where("`id` = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) IDGt(ID ID) NetworkQuerySet {
	return qs.w(qs.db.Where("`id` > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) IDGte(ID ID) NetworkQuerySet {
	return qs.w(qs.db.Where("`id` >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) IDIn(ID ...ID) NetworkQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) IDLt(ID ID) NetworkQuerySet {
	return qs.w(qs.db.Where("`id` < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) IDLte(ID ID) NetworkQuerySet {
	return qs.w(qs.db.Where("`id` <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) IDNe(ID ID) NetworkQuerySet {
	return qs.w(qs.db.Where("`id` != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) IDNotIn(ID ...ID) NetworkQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) Limit(limit int) NetworkQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) NameEq(name string) NetworkQuerySet {
	return qs.w(qs.db.Where("`name` = ?", name))
}

// NameGt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) NameGt(name string) NetworkQuerySet {
	return qs.w(qs.db.Where("`name` > ?", name))
}

// NameGte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) NameGte(name string) NetworkQuerySet {
	return qs.w(qs.db.Where("`name` >= ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) NameIn(name ...string) NetworkQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name IN (?)", name))
}

// NameLike is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) NameLike(name string) NetworkQuerySet {
	return qs.w(qs.db.Where("`name` LIKE ?", name))
}

// NameLt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) NameLt(name string) NetworkQuerySet {
	return qs.w(qs.db.Where("`name` < ?", name))
}

// NameLte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) NameLte(name string) NetworkQuerySet {
	return qs.w(qs.db.Where("`name` <= ?", name))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) NameNe(name string) NetworkQuerySet {
	return qs.w(qs.db.Where("`name` != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) NameNotIn(name ...string) NetworkQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", name))
}

// NameNotlike is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) NameNotlike(name string) NetworkQuerySet {
	return qs.w(qs.db.Where("`name` NOT LIKE ?", name))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) Offset(offset int) NetworkQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs NetworkQuerySet) One(ret *Network) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderAscByCreatedAt() NetworkQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByCreatedByID is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderAscByCreatedByID() NetworkQuerySet {
	return qs.w(qs.db.Order("created_by_id ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderAscByDeletedAt() NetworkQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByDescription is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderAscByDescription() NetworkQuerySet {
	return qs.w(qs.db.Order("description ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderAscByID() NetworkQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByName is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderAscByName() NetworkQuerySet {
	return qs.w(qs.db.Order("name ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderAscByUpdatedAt() NetworkQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderDescByCreatedAt() NetworkQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByCreatedByID is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderDescByCreatedByID() NetworkQuerySet {
	return qs.w(qs.db.Order("created_by_id DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderDescByDeletedAt() NetworkQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByDescription is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderDescByDescription() NetworkQuerySet {
	return qs.w(qs.db.Order("description DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderDescByID() NetworkQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByName is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderDescByName() NetworkQuerySet {
	return qs.w(qs.db.Order("name DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) OrderDescByUpdatedAt() NetworkQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PreloadCreatedBy is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) PreloadCreatedBy() NetworkQuerySet {
	return qs.w(qs.db.Preload("CreatedBy"))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) UpdatedAtEq(updatedAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`updated_at` = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) UpdatedAtGt(updatedAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`updated_at` > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) UpdatedAtGte(updatedAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`updated_at` >= ?", updatedAt))
}

// UpdatedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) UpdatedAtIsNotNull() NetworkQuerySet {
	return qs.w(qs.db.Where("updated_at IS NOT NULL"))
}

// UpdatedAtIsNull is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) UpdatedAtIsNull() NetworkQuerySet {
	return qs.w(qs.db.Where("updated_at IS NULL"))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) UpdatedAtLt(updatedAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`updated_at` < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) UpdatedAtLte(updatedAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`updated_at` <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs NetworkQuerySet) UpdatedAtNe(updatedAt time.Time) NetworkQuerySet {
	return qs.w(qs.db.Where("`updated_at` != ?", updatedAt))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u NetworkUpdater) SetCreatedAt(createdAt time.Time) NetworkUpdater {
	u.fields[string(NetworkDBSchema.CreatedAt)] = createdAt
	return u
}

// SetCreatedByID is an autogenerated method
// nolint: dupl
func (u NetworkUpdater) SetCreatedByID(createdByID ID) NetworkUpdater {
	u.fields[string(NetworkDBSchema.CreatedByID)] = createdByID
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u NetworkUpdater) SetDeletedAt(deletedAt *time.Time) NetworkUpdater {
	u.fields[string(NetworkDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetDescription is an autogenerated method
// nolint: dupl
func (u NetworkUpdater) SetDescription(description string) NetworkUpdater {
	u.fields[string(NetworkDBSchema.Description)] = description
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u NetworkUpdater) SetID(ID ID) NetworkUpdater {
	u.fields[string(NetworkDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u NetworkUpdater) SetName(name string) NetworkUpdater {
	u.fields[string(NetworkDBSchema.Name)] = name
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u NetworkUpdater) SetUpdatedAt(updatedAt *time.Time) NetworkUpdater {
	u.fields[string(NetworkDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u NetworkUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u NetworkUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set NetworkQuerySet

// ===== BEGIN of Network modifiers

// NetworkDBSchemaField describes database schema field. It requires for method 'Update'
type NetworkDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f NetworkDBSchemaField) String() string {
	return string(f)
}

// NetworkDBSchema stores db field names of Network
var NetworkDBSchema = struct {
	ID          NetworkDBSchemaField
	CreatedAt   NetworkDBSchemaField
	UpdatedAt   NetworkDBSchemaField
	DeletedAt   NetworkDBSchemaField
	CreatedByID NetworkDBSchemaField
	CreatedBy   NetworkDBSchemaField
	Name        NetworkDBSchemaField
	Description NetworkDBSchemaField
}{

	ID:          NetworkDBSchemaField("id"),
	CreatedAt:   NetworkDBSchemaField("created_at"),
	UpdatedAt:   NetworkDBSchemaField("updated_at"),
	DeletedAt:   NetworkDBSchemaField("deleted_at"),
	CreatedByID: NetworkDBSchemaField("created_by_id"),
	CreatedBy:   NetworkDBSchemaField("created_by"),
	Name:        NetworkDBSchemaField("name"),
	Description: NetworkDBSchemaField("description"),
}

// Update updates Network fields by primary key
// nolint: dupl
func (o *Network) Update(db *gorm.DB, fields ...NetworkDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":            o.ID,
		"created_at":    o.CreatedAt,
		"updated_at":    o.UpdatedAt,
		"deleted_at":    o.DeletedAt,
		"created_by_id": o.CreatedByID,
		"created_by":    o.CreatedBy,
		"name":          o.Name,
		"description":   o.Description,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Network %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// NetworkUpdater is an Network updates manager
type NetworkUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewNetworkUpdater creates new Network updater
// nolint: dupl
func NewNetworkUpdater(db *gorm.DB) NetworkUpdater {
	return NetworkUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Network{}),
	}
}

// ===== END of Network modifiers

// ===== BEGIN of query set NetworkUserQuerySet

// NetworkUserQuerySet is an queryset type for NetworkUser
type NetworkUserQuerySet struct {
	db *gorm.DB
}

// NewNetworkUserQuerySet constructs new NetworkUserQuerySet
func NewNetworkUserQuerySet(db *gorm.DB) NetworkUserQuerySet {
	return NetworkUserQuerySet{
		db: db.Model(&NetworkUser{}),
	}
}

func (qs NetworkUserQuerySet) w(db *gorm.DB) NetworkUserQuerySet {
	return NewNetworkUserQuerySet(db)
}

func (qs NetworkUserQuerySet) Preload(query string, args ...interface{}) NetworkUserQuerySet {
	return NewNetworkUserQuerySet(qs.db.Preload(query, args...))
}

// Preload preload associations with given conditions
//    db.Preload("Orders", "state NOT IN (?)", "cancelled").Find(&users)
func (qs NetworkUserQuerySet) Select(fields ...NetworkUserDBSchemaField) NetworkUserQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *NetworkUser) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *NetworkUser) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) All(ret *[]NetworkUser) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) CreatedAtEq(createdAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`created_at` = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) CreatedAtGt(createdAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`created_at` > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) CreatedAtGte(createdAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`created_at` >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) CreatedAtLt(createdAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`created_at` < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) CreatedAtLte(createdAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`created_at` <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) CreatedAtNe(createdAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`created_at` != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) Delete() error {
	return qs.db.Delete(NetworkUser{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(NetworkUser{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(NetworkUser{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) DeletedAtEq(deletedAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) DeletedAtGt(deletedAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) DeletedAtGte(deletedAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) DeletedAtIsNotNull() NetworkUserQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) DeletedAtIsNull() NetworkUserQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) DeletedAtLt(deletedAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) DeletedAtLte(deletedAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) DeletedAtNe(deletedAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` != ?", deletedAt))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) GetUpdater() NetworkUserUpdater {
	return NewNetworkUserUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) IDEq(ID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`id` = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) IDGt(ID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`id` > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) IDGte(ID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`id` >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) IDIn(ID ...ID) NetworkUserQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) IDLt(ID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`id` < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) IDLte(ID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`id` <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) IDNe(ID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`id` != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) IDNotIn(ID ...ID) NetworkUserQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) Limit(limit int) NetworkUserQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NetworkIDEq is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) NetworkIDEq(networkID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`network_id` = ?", networkID))
}

// NetworkIDGt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) NetworkIDGt(networkID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`network_id` > ?", networkID))
}

// NetworkIDGte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) NetworkIDGte(networkID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`network_id` >= ?", networkID))
}

// NetworkIDIn is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) NetworkIDIn(networkID ...ID) NetworkUserQuerySet {
	if len(networkID) == 0 {
		qs.db.AddError(errors.New("must at least pass one networkID in NetworkIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("network_id IN (?)", networkID))
}

// NetworkIDLt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) NetworkIDLt(networkID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`network_id` < ?", networkID))
}

// NetworkIDLte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) NetworkIDLte(networkID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`network_id` <= ?", networkID))
}

// NetworkIDNe is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) NetworkIDNe(networkID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`network_id` != ?", networkID))
}

// NetworkIDNotIn is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) NetworkIDNotIn(networkID ...ID) NetworkUserQuerySet {
	if len(networkID) == 0 {
		qs.db.AddError(errors.New("must at least pass one networkID in NetworkIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("network_id NOT IN (?)", networkID))
}

// NetworkIsNotNull is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) NetworkIsNotNull() NetworkUserQuerySet {
	return qs.w(qs.db.Where("network IS NOT NULL"))
}

// NetworkIsNull is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) NetworkIsNull() NetworkUserQuerySet {
	return qs.w(qs.db.Where("network IS NULL"))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) Offset(offset int) NetworkUserQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs NetworkUserQuerySet) One(ret *NetworkUser) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderAscByCreatedAt() NetworkUserQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderAscByDeletedAt() NetworkUserQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderAscByID() NetworkUserQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByNetworkID is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderAscByNetworkID() NetworkUserQuerySet {
	return qs.w(qs.db.Order("network_id ASC"))
}

// OrderAscByRole is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderAscByRole() NetworkUserQuerySet {
	return qs.w(qs.db.Order("role ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderAscByUpdatedAt() NetworkUserQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderAscByUserID is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderAscByUserID() NetworkUserQuerySet {
	return qs.w(qs.db.Order("user_id ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderDescByCreatedAt() NetworkUserQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderDescByDeletedAt() NetworkUserQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderDescByID() NetworkUserQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByNetworkID is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderDescByNetworkID() NetworkUserQuerySet {
	return qs.w(qs.db.Order("network_id DESC"))
}

// OrderDescByRole is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderDescByRole() NetworkUserQuerySet {
	return qs.w(qs.db.Order("role DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderDescByUpdatedAt() NetworkUserQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// OrderDescByUserID is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) OrderDescByUserID() NetworkUserQuerySet {
	return qs.w(qs.db.Order("user_id DESC"))
}

// PreloadNetwork is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) PreloadNetwork() NetworkUserQuerySet {
	return qs.w(qs.db.Preload("Network"))
}

// PreloadUser is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) PreloadUser() NetworkUserQuerySet {
	return qs.w(qs.db.Preload("User"))
}

// RoleEq is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) RoleEq(role RoleType) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`role` = ?", role))
}

// RoleGt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) RoleGt(role RoleType) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`role` > ?", role))
}

// RoleGte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) RoleGte(role RoleType) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`role` >= ?", role))
}

// RoleIn is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) RoleIn(role ...RoleType) NetworkUserQuerySet {
	if len(role) == 0 {
		qs.db.AddError(errors.New("must at least pass one role in RoleIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("role IN (?)", role))
}

// RoleLike is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) RoleLike(role RoleType) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`role` LIKE ?", role))
}

// RoleLt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) RoleLt(role RoleType) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`role` < ?", role))
}

// RoleLte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) RoleLte(role RoleType) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`role` <= ?", role))
}

// RoleNe is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) RoleNe(role RoleType) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`role` != ?", role))
}

// RoleNotIn is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) RoleNotIn(role ...RoleType) NetworkUserQuerySet {
	if len(role) == 0 {
		qs.db.AddError(errors.New("must at least pass one role in RoleNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("role NOT IN (?)", role))
}

// RoleNotlike is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) RoleNotlike(role RoleType) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`role` NOT LIKE ?", role))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UpdatedAtEq(updatedAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UpdatedAtGt(updatedAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UpdatedAtGte(updatedAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` >= ?", updatedAt))
}

// UpdatedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UpdatedAtIsNotNull() NetworkUserQuerySet {
	return qs.w(qs.db.Where("updated_at IS NOT NULL"))
}

// UpdatedAtIsNull is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UpdatedAtIsNull() NetworkUserQuerySet {
	return qs.w(qs.db.Where("updated_at IS NULL"))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UpdatedAtLt(updatedAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UpdatedAtLte(updatedAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UpdatedAtNe(updatedAt time.Time) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` != ?", updatedAt))
}

// UserIDEq is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UserIDEq(userID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`user_id` = ?", userID))
}

// UserIDGt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UserIDGt(userID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`user_id` > ?", userID))
}

// UserIDGte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UserIDGte(userID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`user_id` >= ?", userID))
}

// UserIDIn is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UserIDIn(userID ...ID) NetworkUserQuerySet {
	if len(userID) == 0 {
		qs.db.AddError(errors.New("must at least pass one userID in UserIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id IN (?)", userID))
}

// UserIDLt is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UserIDLt(userID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`user_id` < ?", userID))
}

// UserIDLte is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UserIDLte(userID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`user_id` <= ?", userID))
}

// UserIDNe is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UserIDNe(userID ID) NetworkUserQuerySet {
	return qs.w(qs.db.Where("`user_id` != ?", userID))
}

// UserIDNotIn is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UserIDNotIn(userID ...ID) NetworkUserQuerySet {
	if len(userID) == 0 {
		qs.db.AddError(errors.New("must at least pass one userID in UserIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id NOT IN (?)", userID))
}

// UserIsNotNull is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UserIsNotNull() NetworkUserQuerySet {
	return qs.w(qs.db.Where("user IS NOT NULL"))
}

// UserIsNull is an autogenerated method
// nolint: dupl
func (qs NetworkUserQuerySet) UserIsNull() NetworkUserQuerySet {
	return qs.w(qs.db.Where("user IS NULL"))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u NetworkUserUpdater) SetCreatedAt(createdAt time.Time) NetworkUserUpdater {
	u.fields[string(NetworkUserDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u NetworkUserUpdater) SetDeletedAt(deletedAt *time.Time) NetworkUserUpdater {
	u.fields[string(NetworkUserDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u NetworkUserUpdater) SetID(ID ID) NetworkUserUpdater {
	u.fields[string(NetworkUserDBSchema.ID)] = ID
	return u
}

// SetNetworkID is an autogenerated method
// nolint: dupl
func (u NetworkUserUpdater) SetNetworkID(networkID ID) NetworkUserUpdater {
	u.fields[string(NetworkUserDBSchema.NetworkID)] = networkID
	return u
}

// SetRole is an autogenerated method
// nolint: dupl
func (u NetworkUserUpdater) SetRole(role RoleType) NetworkUserUpdater {
	u.fields[string(NetworkUserDBSchema.Role)] = role
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u NetworkUserUpdater) SetUpdatedAt(updatedAt *time.Time) NetworkUserUpdater {
	u.fields[string(NetworkUserDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SetUserID is an autogenerated method
// nolint: dupl
func (u NetworkUserUpdater) SetUserID(userID ID) NetworkUserUpdater {
	u.fields[string(NetworkUserDBSchema.UserID)] = userID
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u NetworkUserUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u NetworkUserUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set NetworkUserQuerySet

// ===== BEGIN of NetworkUser modifiers

// NetworkUserDBSchemaField describes database schema field. It requires for method 'Update'
type NetworkUserDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f NetworkUserDBSchemaField) String() string {
	return string(f)
}

// NetworkUserDBSchema stores db field names of NetworkUser
var NetworkUserDBSchema = struct {
	ID        NetworkUserDBSchemaField
	CreatedAt NetworkUserDBSchemaField
	UpdatedAt NetworkUserDBSchemaField
	DeletedAt NetworkUserDBSchemaField
	UserID    NetworkUserDBSchemaField
	User      NetworkUserDBSchemaField
	NetworkID NetworkUserDBSchemaField
	Network   NetworkUserDBSchemaField
	Role      NetworkUserDBSchemaField
}{

	ID:        NetworkUserDBSchemaField("id"),
	CreatedAt: NetworkUserDBSchemaField("created_at"),
	UpdatedAt: NetworkUserDBSchemaField("updated_at"),
	DeletedAt: NetworkUserDBSchemaField("deleted_at"),
	UserID:    NetworkUserDBSchemaField("user_id"),
	User:      NetworkUserDBSchemaField("user"),
	NetworkID: NetworkUserDBSchemaField("network_id"),
	Network:   NetworkUserDBSchemaField("network"),
	Role:      NetworkUserDBSchemaField("role"),
}

// Update updates NetworkUser fields by primary key
// nolint: dupl
func (o *NetworkUser) Update(db *gorm.DB, fields ...NetworkUserDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"user_id":    o.UserID,
		"user":       o.User,
		"network_id": o.NetworkID,
		"network":    o.Network,
		"role":       o.Role,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update NetworkUser %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// NetworkUserUpdater is an NetworkUser updates manager
type NetworkUserUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewNetworkUserUpdater creates new NetworkUser updater
// nolint: dupl
func NewNetworkUserUpdater(db *gorm.DB) NetworkUserUpdater {
	return NetworkUserUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&NetworkUser{}),
	}
}

// ===== END of NetworkUser modifiers

// ===== BEGIN of query set RelayServerQuerySet

// RelayServerQuerySet is an queryset type for RelayServer
type RelayServerQuerySet struct {
	db *gorm.DB
}

// NewRelayServerQuerySet constructs new RelayServerQuerySet
func NewRelayServerQuerySet(db *gorm.DB) RelayServerQuerySet {
	return RelayServerQuerySet{
		db: db.Model(&RelayServer{}),
	}
}

func (qs RelayServerQuerySet) w(db *gorm.DB) RelayServerQuerySet {
	return NewRelayServerQuerySet(db)
}

func (qs RelayServerQuerySet) Preload(query string, args ...interface{}) RelayServerQuerySet {
	return NewRelayServerQuerySet(qs.db.Preload(query, args...))
}

// Preload preload associations with given conditions
//    db.Preload("Orders", "state NOT IN (?)", "cancelled").Find(&users)
func (qs RelayServerQuerySet) Select(fields ...RelayServerDBSchemaField) RelayServerQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *RelayServer) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *RelayServer) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) All(ret *[]RelayServer) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) CreatedAtEq(createdAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`created_at` = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) CreatedAtGt(createdAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`created_at` > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) CreatedAtGte(createdAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`created_at` >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) CreatedAtLt(createdAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`created_at` < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) CreatedAtLte(createdAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`created_at` <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) CreatedAtNe(createdAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`created_at` != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) Delete() error {
	return qs.db.Delete(RelayServer{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(RelayServer{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(RelayServer{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) DeletedAtEq(deletedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`deleted_at` = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) DeletedAtGt(deletedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`deleted_at` > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) DeletedAtGte(deletedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`deleted_at` >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) DeletedAtIsNotNull() RelayServerQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) DeletedAtIsNull() RelayServerQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) DeletedAtLt(deletedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`deleted_at` < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) DeletedAtLte(deletedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`deleted_at` <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) DeletedAtNe(deletedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`deleted_at` != ?", deletedAt))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) GetUpdater() RelayServerUpdater {
	return NewRelayServerUpdater(qs.db)
}

// HostEq is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) HostEq(host string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`host` = ?", host))
}

// HostGt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) HostGt(host string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`host` > ?", host))
}

// HostGte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) HostGte(host string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`host` >= ?", host))
}

// HostIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) HostIn(host ...string) RelayServerQuerySet {
	if len(host) == 0 {
		qs.db.AddError(errors.New("must at least pass one host in HostIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("host IN (?)", host))
}

// HostLike is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) HostLike(host string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`host` LIKE ?", host))
}

// HostLt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) HostLt(host string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`host` < ?", host))
}

// HostLte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) HostLte(host string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`host` <= ?", host))
}

// HostNe is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) HostNe(host string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`host` != ?", host))
}

// HostNotIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) HostNotIn(host ...string) RelayServerQuerySet {
	if len(host) == 0 {
		qs.db.AddError(errors.New("must at least pass one host in HostNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("host NOT IN (?)", host))
}

// HostNotlike is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) HostNotlike(host string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`host` NOT LIKE ?", host))
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) IDEq(ID ID) RelayServerQuerySet {
	return qs.w(qs.db.Where("`id` = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) IDGt(ID ID) RelayServerQuerySet {
	return qs.w(qs.db.Where("`id` > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) IDGte(ID ID) RelayServerQuerySet {
	return qs.w(qs.db.Where("`id` >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) IDIn(ID ...ID) RelayServerQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) IDLt(ID ID) RelayServerQuerySet {
	return qs.w(qs.db.Where("`id` < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) IDLte(ID ID) RelayServerQuerySet {
	return qs.w(qs.db.Where("`id` <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) IDNe(ID ID) RelayServerQuerySet {
	return qs.w(qs.db.Where("`id` != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) IDNotIn(ID ...ID) RelayServerQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// KeepaliveAtEq is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) KeepaliveAtEq(keepaliveAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`keepalive_at` = ?", keepaliveAt))
}

// KeepaliveAtGt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) KeepaliveAtGt(keepaliveAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`keepalive_at` > ?", keepaliveAt))
}

// KeepaliveAtGte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) KeepaliveAtGte(keepaliveAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`keepalive_at` >= ?", keepaliveAt))
}

// KeepaliveAtLt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) KeepaliveAtLt(keepaliveAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`keepalive_at` < ?", keepaliveAt))
}

// KeepaliveAtLte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) KeepaliveAtLte(keepaliveAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`keepalive_at` <= ?", keepaliveAt))
}

// KeepaliveAtNe is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) KeepaliveAtNe(keepaliveAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`keepalive_at` != ?", keepaliveAt))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) Limit(limit int) RelayServerQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) NameEq(name string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`name` = ?", name))
}

// NameGt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) NameGt(name string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`name` > ?", name))
}

// NameGte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) NameGte(name string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`name` >= ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) NameIn(name ...string) RelayServerQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name IN (?)", name))
}

// NameLike is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) NameLike(name string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`name` LIKE ?", name))
}

// NameLt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) NameLt(name string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`name` < ?", name))
}

// NameLte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) NameLte(name string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`name` <= ?", name))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) NameNe(name string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`name` != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) NameNotIn(name ...string) RelayServerQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", name))
}

// NameNotlike is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) NameNotlike(name string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`name` NOT LIKE ?", name))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) Offset(offset int) RelayServerQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs RelayServerQuerySet) One(ret *RelayServer) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderAscByCreatedAt() RelayServerQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderAscByDeletedAt() RelayServerQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByHost is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderAscByHost() RelayServerQuerySet {
	return qs.w(qs.db.Order("host ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderAscByID() RelayServerQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByKeepaliveAt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderAscByKeepaliveAt() RelayServerQuerySet {
	return qs.w(qs.db.Order("keepalive_at ASC"))
}

// OrderAscByName is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderAscByName() RelayServerQuerySet {
	return qs.w(qs.db.Order("name ASC"))
}

// OrderAscByPort is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderAscByPort() RelayServerQuerySet {
	return qs.w(qs.db.Order("port ASC"))
}

// OrderAscByPublicKey is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderAscByPublicKey() RelayServerQuerySet {
	return qs.w(qs.db.Order("public_key ASC"))
}

// OrderAscByRegion is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderAscByRegion() RelayServerQuerySet {
	return qs.w(qs.db.Order("region ASC"))
}

// OrderAscBySTUNPort is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderAscBySTUNPort() RelayServerQuerySet {
	return qs.w(qs.db.Order("stun_port ASC"))
}

// OrderAscByStartedAt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderAscByStartedAt() RelayServerQuerySet {
	return qs.w(qs.db.Order("started_at ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderAscByUpdatedAt() RelayServerQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderDescByCreatedAt() RelayServerQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderDescByDeletedAt() RelayServerQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByHost is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderDescByHost() RelayServerQuerySet {
	return qs.w(qs.db.Order("host DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderDescByID() RelayServerQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByKeepaliveAt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderDescByKeepaliveAt() RelayServerQuerySet {
	return qs.w(qs.db.Order("keepalive_at DESC"))
}

// OrderDescByName is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderDescByName() RelayServerQuerySet {
	return qs.w(qs.db.Order("name DESC"))
}

// OrderDescByPort is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderDescByPort() RelayServerQuerySet {
	return qs.w(qs.db.Order("port DESC"))
}

// OrderDescByPublicKey is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderDescByPublicKey() RelayServerQuerySet {
	return qs.w(qs.db.Order("public_key DESC"))
}

// OrderDescByRegion is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderDescByRegion() RelayServerQuerySet {
	return qs.w(qs.db.Order("region DESC"))
}

// OrderDescBySTUNPort is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderDescBySTUNPort() RelayServerQuerySet {
	return qs.w(qs.db.Order("stun_port DESC"))
}

// OrderDescByStartedAt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderDescByStartedAt() RelayServerQuerySet {
	return qs.w(qs.db.Order("started_at DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) OrderDescByUpdatedAt() RelayServerQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PortEq is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PortEq(port int) RelayServerQuerySet {
	return qs.w(qs.db.Where("`port` = ?", port))
}

// PortGt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PortGt(port int) RelayServerQuerySet {
	return qs.w(qs.db.Where("`port` > ?", port))
}

// PortGte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PortGte(port int) RelayServerQuerySet {
	return qs.w(qs.db.Where("`port` >= ?", port))
}

// PortIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PortIn(port ...int) RelayServerQuerySet {
	if len(port) == 0 {
		qs.db.AddError(errors.New("must at least pass one port in PortIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("port IN (?)", port))
}

// PortLt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PortLt(port int) RelayServerQuerySet {
	return qs.w(qs.db.Where("`port` < ?", port))
}

// PortLte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PortLte(port int) RelayServerQuerySet {
	return qs.w(qs.db.Where("`port` <= ?", port))
}

// PortNe is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PortNe(port int) RelayServerQuerySet {
	return qs.w(qs.db.Where("`port` != ?", port))
}

// PortNotIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PortNotIn(port ...int) RelayServerQuerySet {
	if len(port) == 0 {
		qs.db.AddError(errors.New("must at least pass one port in PortNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("port NOT IN (?)", port))
}

// PublicKeyEq is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PublicKeyEq(publicKey string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`public_key` = ?", publicKey))
}

// PublicKeyGt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PublicKeyGt(publicKey string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`public_key` > ?", publicKey))
}

// PublicKeyGte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PublicKeyGte(publicKey string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`public_key` >= ?", publicKey))
}

// PublicKeyIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PublicKeyIn(publicKey ...string) RelayServerQuerySet {
	if len(publicKey) == 0 {
		qs.db.AddError(errors.New("must at least pass one publicKey in PublicKeyIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("public_key IN (?)", publicKey))
}

// PublicKeyLike is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PublicKeyLike(publicKey string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`public_key` LIKE ?", publicKey))
}

// PublicKeyLt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PublicKeyLt(publicKey string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`public_key` < ?", publicKey))
}

// PublicKeyLte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PublicKeyLte(publicKey string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`public_key` <= ?", publicKey))
}

// PublicKeyNe is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PublicKeyNe(publicKey string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`public_key` != ?", publicKey))
}

// PublicKeyNotIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PublicKeyNotIn(publicKey ...string) RelayServerQuerySet {
	if len(publicKey) == 0 {
		qs.db.AddError(errors.New("must at least pass one publicKey in PublicKeyNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("public_key NOT IN (?)", publicKey))
}

// PublicKeyNotlike is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) PublicKeyNotlike(publicKey string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`public_key` NOT LIKE ?", publicKey))
}

// RegionEq is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) RegionEq(region string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`region` = ?", region))
}

// RegionGt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) RegionGt(region string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`region` > ?", region))
}

// RegionGte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) RegionGte(region string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`region` >= ?", region))
}

// RegionIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) RegionIn(region ...string) RelayServerQuerySet {
	if len(region) == 0 {
		qs.db.AddError(errors.New("must at least pass one region in RegionIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("region IN (?)", region))
}

// RegionLike is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) RegionLike(region string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`region` LIKE ?", region))
}

// RegionLt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) RegionLt(region string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`region` < ?", region))
}

// RegionLte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) RegionLte(region string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`region` <= ?", region))
}

// RegionNe is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) RegionNe(region string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`region` != ?", region))
}

// RegionNotIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) RegionNotIn(region ...string) RelayServerQuerySet {
	if len(region) == 0 {
		qs.db.AddError(errors.New("must at least pass one region in RegionNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("region NOT IN (?)", region))
}

// RegionNotlike is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) RegionNotlike(region string) RelayServerQuerySet {
	return qs.w(qs.db.Where("`region` NOT LIKE ?", region))
}

// STUNPortEq is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) STUNPortEq(sTUNPort int) RelayServerQuerySet {
	return qs.w(qs.db.Where("`stun_port` = ?", sTUNPort))
}

// STUNPortGt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) STUNPortGt(sTUNPort int) RelayServerQuerySet {
	return qs.w(qs.db.Where("`stun_port` > ?", sTUNPort))
}

// STUNPortGte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) STUNPortGte(sTUNPort int) RelayServerQuerySet {
	return qs.w(qs.db.Where("`stun_port` >= ?", sTUNPort))
}

// STUNPortIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) STUNPortIn(sTUNPort ...int) RelayServerQuerySet {
	if len(sTUNPort) == 0 {
		qs.db.AddError(errors.New("must at least pass one sTUNPort in STUNPortIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("stun_port IN (?)", sTUNPort))
}

// STUNPortLt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) STUNPortLt(sTUNPort int) RelayServerQuerySet {
	return qs.w(qs.db.Where("`stun_port` < ?", sTUNPort))
}

// STUNPortLte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) STUNPortLte(sTUNPort int) RelayServerQuerySet {
	return qs.w(qs.db.Where("`stun_port` <= ?", sTUNPort))
}

// STUNPortNe is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) STUNPortNe(sTUNPort int) RelayServerQuerySet {
	return qs.w(qs.db.Where("`stun_port` != ?", sTUNPort))
}

// STUNPortNotIn is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) STUNPortNotIn(sTUNPort ...int) RelayServerQuerySet {
	if len(sTUNPort) == 0 {
		qs.db.AddError(errors.New("must at least pass one sTUNPort in STUNPortNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("stun_port NOT IN (?)", sTUNPort))
}

// StartedAtEq is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) StartedAtEq(startedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`started_at` = ?", startedAt))
}

// StartedAtGt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) StartedAtGt(startedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`started_at` > ?", startedAt))
}

// StartedAtGte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) StartedAtGte(startedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`started_at` >= ?", startedAt))
}

// StartedAtLt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) StartedAtLt(startedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`started_at` < ?", startedAt))
}

// StartedAtLte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) StartedAtLte(startedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`started_at` <= ?", startedAt))
}

// StartedAtNe is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) StartedAtNe(startedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`started_at` != ?", startedAt))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) UpdatedAtEq(updatedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`updated_at` = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) UpdatedAtGt(updatedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`updated_at` > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) UpdatedAtGte(updatedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`updated_at` >= ?", updatedAt))
}

// UpdatedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) UpdatedAtIsNotNull() RelayServerQuerySet {
	return qs.w(qs.db.Where("updated_at IS NOT NULL"))
}

// UpdatedAtIsNull is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) UpdatedAtIsNull() RelayServerQuerySet {
	return qs.w(qs.db.Where("updated_at IS NULL"))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) UpdatedAtLt(updatedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`updated_at` < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) UpdatedAtLte(updatedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`updated_at` <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs RelayServerQuerySet) UpdatedAtNe(updatedAt time.Time) RelayServerQuerySet {
	return qs.w(qs.db.Where("`updated_at` != ?", updatedAt))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) SetCreatedAt(createdAt time.Time) RelayServerUpdater {
	u.fields[string(RelayServerDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) SetDeletedAt(deletedAt *time.Time) RelayServerUpdater {
	u.fields[string(RelayServerDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetHost is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) SetHost(host string) RelayServerUpdater {
	u.fields[string(RelayServerDBSchema.Host)] = host
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) SetID(ID ID) RelayServerUpdater {
	u.fields[string(RelayServerDBSchema.ID)] = ID
	return u
}

// SetKeepaliveAt is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) SetKeepaliveAt(keepaliveAt time.Time) RelayServerUpdater {
	u.fields[string(RelayServerDBSchema.KeepaliveAt)] = keepaliveAt
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) SetName(name string) RelayServerUpdater {
	u.fields[string(RelayServerDBSchema.Name)] = name
	return u
}

// SetPort is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) SetPort(port int) RelayServerUpdater {
	u.fields[string(RelayServerDBSchema.Port)] = port
	return u
}

// SetPublicKey is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) SetPublicKey(publicKey string) RelayServerUpdater {
	u.fields[string(RelayServerDBSchema.PublicKey)] = publicKey
	return u
}

// SetRegion is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) SetRegion(region string) RelayServerUpdater {
	u.fields[string(RelayServerDBSchema.Region)] = region
	return u
}

// SetSTUNPort is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) SetSTUNPort(sTUNPort int) RelayServerUpdater {
	u.fields[string(RelayServerDBSchema.STUNPort)] = sTUNPort
	return u
}

// SetStartedAt is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) SetStartedAt(startedAt time.Time) RelayServerUpdater {
	u.fields[string(RelayServerDBSchema.StartedAt)] = startedAt
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) SetUpdatedAt(updatedAt *time.Time) RelayServerUpdater {
	u.fields[string(RelayServerDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u RelayServerUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set RelayServerQuerySet

// ===== BEGIN of RelayServer modifiers

// RelayServerDBSchemaField describes database schema field. It requires for method 'Update'
type RelayServerDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f RelayServerDBSchemaField) String() string {
	return string(f)
}

// RelayServerDBSchema stores db field names of RelayServer
var RelayServerDBSchema = struct {
	ID          RelayServerDBSchemaField
	CreatedAt   RelayServerDBSchemaField
	UpdatedAt   RelayServerDBSchemaField
	DeletedAt   RelayServerDBSchemaField
	Name        RelayServerDBSchemaField
	Region      RelayServerDBSchemaField
	Host        RelayServerDBSchemaField
	Port        RelayServerDBSchemaField
	STUNPort    RelayServerDBSchemaField
	PublicKey   RelayServerDBSchemaField
	StartedAt   RelayServerDBSchemaField
	KeepaliveAt RelayServerDBSchemaField
}{

	ID:          RelayServerDBSchemaField("id"),
	CreatedAt:   RelayServerDBSchemaField("created_at"),
	UpdatedAt:   RelayServerDBSchemaField("updated_at"),
	DeletedAt:   RelayServerDBSchemaField("deleted_at"),
	Name:        RelayServerDBSchemaField("name"),
	Region:      RelayServerDBSchemaField("region"),
	Host:        RelayServerDBSchemaField("host"),
	Port:        RelayServerDBSchemaField("port"),
	STUNPort:    RelayServerDBSchemaField("stun_port"),
	PublicKey:   RelayServerDBSchemaField("public_key"),
	StartedAt:   RelayServerDBSchemaField("started_at"),
	KeepaliveAt: RelayServerDBSchemaField("keepalive_at"),
}

// Update updates RelayServer fields by primary key
// nolint: dupl
func (o *RelayServer) Update(db *gorm.DB, fields ...RelayServerDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":           o.ID,
		"created_at":   o.CreatedAt,
		"updated_at":   o.UpdatedAt,
		"deleted_at":   o.DeletedAt,
		"name":         o.Name,
		"region":       o.Region,
		"host":         o.Host,
		"port":         o.Port,
		"stun_port":    o.STUNPort,
		"public_key":   o.PublicKey,
		"started_at":   o.StartedAt,
		"keepalive_at": o.KeepaliveAt,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update RelayServer %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// RelayServerUpdater is an RelayServer updates manager
type RelayServerUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewRelayServerUpdater creates new RelayServer updater
// nolint: dupl
func NewRelayServerUpdater(db *gorm.DB) RelayServerUpdater {
	return RelayServerUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&RelayServer{}),
	}
}

// ===== END of RelayServer modifiers

// ===== BEGIN of query set UserQuerySet

// UserQuerySet is an queryset type for User
type UserQuerySet struct {
	db *gorm.DB
}

// NewUserQuerySet constructs new UserQuerySet
func NewUserQuerySet(db *gorm.DB) UserQuerySet {
	return UserQuerySet{
		db: db.Model(&User{}),
	}
}

func (qs UserQuerySet) w(db *gorm.DB) UserQuerySet {
	return NewUserQuerySet(db)
}

func (qs UserQuerySet) Preload(query string, args ...interface{}) UserQuerySet {
	return NewUserQuerySet(qs.db.Preload(query, args...))
}

// Preload preload associations with given conditions
//    db.Preload("Orders", "state NOT IN (?)", "cancelled").Find(&users)
func (qs UserQuerySet) Select(fields ...UserDBSchemaField) UserQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *User) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *User) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) All(ret *[]User) error {
	return qs.db.Find(ret).Error
}

// AvatarEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) AvatarEq(avatar string) UserQuerySet {
	return qs.w(qs.db.Where("`avatar` = ?", avatar))
}

// AvatarGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) AvatarGt(avatar string) UserQuerySet {
	return qs.w(qs.db.Where("`avatar` > ?", avatar))
}

// AvatarGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) AvatarGte(avatar string) UserQuerySet {
	return qs.w(qs.db.Where("`avatar` >= ?", avatar))
}

// AvatarIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) AvatarIn(avatar ...string) UserQuerySet {
	if len(avatar) == 0 {
		qs.db.AddError(errors.New("must at least pass one avatar in AvatarIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("avatar IN (?)", avatar))
}

// AvatarLike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) AvatarLike(avatar string) UserQuerySet {
	return qs.w(qs.db.Where("`avatar` LIKE ?", avatar))
}

// AvatarLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) AvatarLt(avatar string) UserQuerySet {
	return qs.w(qs.db.Where("`avatar` < ?", avatar))
}

// AvatarLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) AvatarLte(avatar string) UserQuerySet {
	return qs.w(qs.db.Where("`avatar` <= ?", avatar))
}

// AvatarNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) AvatarNe(avatar string) UserQuerySet {
	return qs.w(qs.db.Where("`avatar` != ?", avatar))
}

// AvatarNotIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) AvatarNotIn(avatar ...string) UserQuerySet {
	if len(avatar) == 0 {
		qs.db.AddError(errors.New("must at least pass one avatar in AvatarNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("avatar NOT IN (?)", avatar))
}

// AvatarNotlike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) AvatarNotlike(avatar string) UserQuerySet {
	return qs.w(qs.db.Where("`avatar` NOT LIKE ?", avatar))
}

// Count is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtEq(createdAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`created_at` = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtGt(createdAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`created_at` > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtGte(createdAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`created_at` >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtLt(createdAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`created_at` < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtLte(createdAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`created_at` <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtNe(createdAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`created_at` != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) Delete() error {
	return qs.db.Delete(User{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(User{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(User{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtEq(deletedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtGt(deletedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtGte(deletedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtIsNotNull() UserQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtIsNull() UserQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtLt(deletedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtLte(deletedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtNe(deletedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` != ?", deletedAt))
}

// EmailEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailEq(email string) UserQuerySet {
	return qs.w(qs.db.Where("`email` = ?", email))
}

// EmailGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailGt(email string) UserQuerySet {
	return qs.w(qs.db.Where("`email` > ?", email))
}

// EmailGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailGte(email string) UserQuerySet {
	return qs.w(qs.db.Where("`email` >= ?", email))
}

// EmailIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailIn(email ...string) UserQuerySet {
	if len(email) == 0 {
		qs.db.AddError(errors.New("must at least pass one email in EmailIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("email IN (?)", email))
}

// EmailLike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailLike(email string) UserQuerySet {
	return qs.w(qs.db.Where("`email` LIKE ?", email))
}

// EmailLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailLt(email string) UserQuerySet {
	return qs.w(qs.db.Where("`email` < ?", email))
}

// EmailLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailLte(email string) UserQuerySet {
	return qs.w(qs.db.Where("`email` <= ?", email))
}

// EmailNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailNe(email string) UserQuerySet {
	return qs.w(qs.db.Where("`email` != ?", email))
}

// EmailNotIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailNotIn(email ...string) UserQuerySet {
	if len(email) == 0 {
		qs.db.AddError(errors.New("must at least pass one email in EmailNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("email NOT IN (?)", email))
}

// EmailNotlike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) EmailNotlike(email string) UserQuerySet {
	return qs.w(qs.db.Where("`email` NOT LIKE ?", email))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) GetUpdater() UserUpdater {
	return NewUserUpdater(qs.db)
}

// HashEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) HashEq(hash string) UserQuerySet {
	return qs.w(qs.db.Where("`hash` = ?", hash))
}

// HashGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) HashGt(hash string) UserQuerySet {
	return qs.w(qs.db.Where("`hash` > ?", hash))
}

// HashGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) HashGte(hash string) UserQuerySet {
	return qs.w(qs.db.Where("`hash` >= ?", hash))
}

// HashIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) HashIn(hash ...string) UserQuerySet {
	if len(hash) == 0 {
		qs.db.AddError(errors.New("must at least pass one hash in HashIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("hash IN (?)", hash))
}

// HashLike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) HashLike(hash string) UserQuerySet {
	return qs.w(qs.db.Where("`hash` LIKE ?", hash))
}

// HashLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) HashLt(hash string) UserQuerySet {
	return qs.w(qs.db.Where("`hash` < ?", hash))
}

// HashLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) HashLte(hash string) UserQuerySet {
	return qs.w(qs.db.Where("`hash` <= ?", hash))
}

// HashNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) HashNe(hash string) UserQuerySet {
	return qs.w(qs.db.Where("`hash` != ?", hash))
}

// HashNotIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) HashNotIn(hash ...string) UserQuerySet {
	if len(hash) == 0 {
		qs.db.AddError(errors.New("must at least pass one hash in HashNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("hash NOT IN (?)", hash))
}

// HashNotlike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) HashNotlike(hash string) UserQuerySet {
	return qs.w(qs.db.Where("`hash` NOT LIKE ?", hash))
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDEq(ID ID) UserQuerySet {
	return qs.w(qs.db.Where("`id` = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDGt(ID ID) UserQuerySet {
	return qs.w(qs.db.Where("`id` > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDGte(ID ID) UserQuerySet {
	return qs.w(qs.db.Where("`id` >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDIn(ID ...ID) UserQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDLt(ID ID) UserQuerySet {
	return qs.w(qs.db.Where("`id` < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDLte(ID ID) UserQuerySet {
	return qs.w(qs.db.Where("`id` <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDNe(ID ID) UserQuerySet {
	return qs.w(qs.db.Where("`id` != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDNotIn(ID ...ID) UserQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) Limit(limit int) UserQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameEq(name string) UserQuerySet {
	return qs.w(qs.db.Where("`name` = ?", name))
}

// NameGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameGt(name string) UserQuerySet {
	return qs.w(qs.db.Where("`name` > ?", name))
}

// NameGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameGte(name string) UserQuerySet {
	return qs.w(qs.db.Where("`name` >= ?", name))
}

// NameIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameIn(name ...string) UserQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name IN (?)", name))
}

// NameLike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameLike(name string) UserQuerySet {
	return qs.w(qs.db.Where("`name` LIKE ?", name))
}

// NameLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameLt(name string) UserQuerySet {
	return qs.w(qs.db.Where("`name` < ?", name))
}

// NameLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameLte(name string) UserQuerySet {
	return qs.w(qs.db.Where("`name` <= ?", name))
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameNe(name string) UserQuerySet {
	return qs.w(qs.db.Where("`name` != ?", name))
}

// NameNotIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameNotIn(name ...string) UserQuerySet {
	if len(name) == 0 {
		qs.db.AddError(errors.New("must at least pass one name in NameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("name NOT IN (?)", name))
}

// NameNotlike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameNotlike(name string) UserQuerySet {
	return qs.w(qs.db.Where("`name` NOT LIKE ?", name))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) Offset(offset int) UserQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs UserQuerySet) One(ret *User) error {
	return qs.db.First(ret).Error
}

// OrderAscByAvatar is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByAvatar() UserQuerySet {
	return qs.w(qs.db.Order("avatar ASC"))
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByCreatedAt() UserQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByDeletedAt() UserQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByEmail is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByEmail() UserQuerySet {
	return qs.w(qs.db.Order("email ASC"))
}

// OrderAscByHash is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByHash() UserQuerySet {
	return qs.w(qs.db.Order("hash ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByID() UserQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByName is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByName() UserQuerySet {
	return qs.w(qs.db.Order("name ASC"))
}

// OrderAscByOrigin is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByOrigin() UserQuerySet {
	return qs.w(qs.db.Order("origin ASC"))
}

// OrderAscBySalt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscBySalt() UserQuerySet {
	return qs.w(qs.db.Order("salt ASC"))
}

// OrderAscBySecretKey is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscBySecretKey() UserQuerySet {
	return qs.w(qs.db.Order("secret_key ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderAscByUpdatedAt() UserQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByAvatar is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByAvatar() UserQuerySet {
	return qs.w(qs.db.Order("avatar DESC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByCreatedAt() UserQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByDeletedAt() UserQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByEmail is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByEmail() UserQuerySet {
	return qs.w(qs.db.Order("email DESC"))
}

// OrderDescByHash is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByHash() UserQuerySet {
	return qs.w(qs.db.Order("hash DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByID() UserQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByName is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByName() UserQuerySet {
	return qs.w(qs.db.Order("name DESC"))
}

// OrderDescByOrigin is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByOrigin() UserQuerySet {
	return qs.w(qs.db.Order("origin DESC"))
}

// OrderDescBySalt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescBySalt() UserQuerySet {
	return qs.w(qs.db.Order("salt DESC"))
}

// OrderDescBySecretKey is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescBySecretKey() UserQuerySet {
	return qs.w(qs.db.Order("secret_key DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderDescByUpdatedAt() UserQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// OriginEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OriginEq(origin string) UserQuerySet {
	return qs.w(qs.db.Where("`origin` = ?", origin))
}

// OriginGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OriginGt(origin string) UserQuerySet {
	return qs.w(qs.db.Where("`origin` > ?", origin))
}

// OriginGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OriginGte(origin string) UserQuerySet {
	return qs.w(qs.db.Where("`origin` >= ?", origin))
}

// OriginIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OriginIn(origin ...string) UserQuerySet {
	if len(origin) == 0 {
		qs.db.AddError(errors.New("must at least pass one origin in OriginIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("origin IN (?)", origin))
}

// OriginLike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OriginLike(origin string) UserQuerySet {
	return qs.w(qs.db.Where("`origin` LIKE ?", origin))
}

// OriginLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OriginLt(origin string) UserQuerySet {
	return qs.w(qs.db.Where("`origin` < ?", origin))
}

// OriginLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OriginLte(origin string) UserQuerySet {
	return qs.w(qs.db.Where("`origin` <= ?", origin))
}

// OriginNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OriginNe(origin string) UserQuerySet {
	return qs.w(qs.db.Where("`origin` != ?", origin))
}

// OriginNotIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OriginNotIn(origin ...string) UserQuerySet {
	if len(origin) == 0 {
		qs.db.AddError(errors.New("must at least pass one origin in OriginNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("origin NOT IN (?)", origin))
}

// OriginNotlike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OriginNotlike(origin string) UserQuerySet {
	return qs.w(qs.db.Where("`origin` NOT LIKE ?", origin))
}

// SaltEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SaltEq(salt string) UserQuerySet {
	return qs.w(qs.db.Where("`salt` = ?", salt))
}

// SaltGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SaltGt(salt string) UserQuerySet {
	return qs.w(qs.db.Where("`salt` > ?", salt))
}

// SaltGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SaltGte(salt string) UserQuerySet {
	return qs.w(qs.db.Where("`salt` >= ?", salt))
}

// SaltIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SaltIn(salt ...string) UserQuerySet {
	if len(salt) == 0 {
		qs.db.AddError(errors.New("must at least pass one salt in SaltIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("salt IN (?)", salt))
}

// SaltLike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SaltLike(salt string) UserQuerySet {
	return qs.w(qs.db.Where("`salt` LIKE ?", salt))
}

// SaltLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SaltLt(salt string) UserQuerySet {
	return qs.w(qs.db.Where("`salt` < ?", salt))
}

// SaltLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SaltLte(salt string) UserQuerySet {
	return qs.w(qs.db.Where("`salt` <= ?", salt))
}

// SaltNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SaltNe(salt string) UserQuerySet {
	return qs.w(qs.db.Where("`salt` != ?", salt))
}

// SaltNotIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SaltNotIn(salt ...string) UserQuerySet {
	if len(salt) == 0 {
		qs.db.AddError(errors.New("must at least pass one salt in SaltNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("salt NOT IN (?)", salt))
}

// SaltNotlike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SaltNotlike(salt string) UserQuerySet {
	return qs.w(qs.db.Where("`salt` NOT LIKE ?", salt))
}

// SecretKeyEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SecretKeyEq(secretKey string) UserQuerySet {
	return qs.w(qs.db.Where("`secret_key` = ?", secretKey))
}

// SecretKeyGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SecretKeyGt(secretKey string) UserQuerySet {
	return qs.w(qs.db.Where("`secret_key` > ?", secretKey))
}

// SecretKeyGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SecretKeyGte(secretKey string) UserQuerySet {
	return qs.w(qs.db.Where("`secret_key` >= ?", secretKey))
}

// SecretKeyIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SecretKeyIn(secretKey ...string) UserQuerySet {
	if len(secretKey) == 0 {
		qs.db.AddError(errors.New("must at least pass one secretKey in SecretKeyIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("secret_key IN (?)", secretKey))
}

// SecretKeyLike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SecretKeyLike(secretKey string) UserQuerySet {
	return qs.w(qs.db.Where("`secret_key` LIKE ?", secretKey))
}

// SecretKeyLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SecretKeyLt(secretKey string) UserQuerySet {
	return qs.w(qs.db.Where("`secret_key` < ?", secretKey))
}

// SecretKeyLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SecretKeyLte(secretKey string) UserQuerySet {
	return qs.w(qs.db.Where("`secret_key` <= ?", secretKey))
}

// SecretKeyNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SecretKeyNe(secretKey string) UserQuerySet {
	return qs.w(qs.db.Where("`secret_key` != ?", secretKey))
}

// SecretKeyNotIn is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SecretKeyNotIn(secretKey ...string) UserQuerySet {
	if len(secretKey) == 0 {
		qs.db.AddError(errors.New("must at least pass one secretKey in SecretKeyNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("secret_key NOT IN (?)", secretKey))
}

// SecretKeyNotlike is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) SecretKeyNotlike(secretKey string) UserQuerySet {
	return qs.w(qs.db.Where("`secret_key` NOT LIKE ?", secretKey))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtEq(updatedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`updated_at` = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtGt(updatedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`updated_at` > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtGte(updatedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`updated_at` >= ?", updatedAt))
}

// UpdatedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtIsNotNull() UserQuerySet {
	return qs.w(qs.db.Where("updated_at IS NOT NULL"))
}

// UpdatedAtIsNull is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtIsNull() UserQuerySet {
	return qs.w(qs.db.Where("updated_at IS NULL"))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtLt(updatedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`updated_at` < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtLte(updatedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`updated_at` <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtNe(updatedAt time.Time) UserQuerySet {
	return qs.w(qs.db.Where("`updated_at` != ?", updatedAt))
}

// SetAvatar is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetAvatar(avatar string) UserUpdater {
	u.fields[string(UserDBSchema.Avatar)] = avatar
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetCreatedAt(createdAt time.Time) UserUpdater {
	u.fields[string(UserDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetDeletedAt(deletedAt *time.Time) UserUpdater {
	u.fields[string(UserDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetEmail is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetEmail(email string) UserUpdater {
	u.fields[string(UserDBSchema.Email)] = email
	return u
}

// SetHash is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetHash(hash string) UserUpdater {
	u.fields[string(UserDBSchema.Hash)] = hash
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetID(ID ID) UserUpdater {
	u.fields[string(UserDBSchema.ID)] = ID
	return u
}

// SetName is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetName(name string) UserUpdater {
	u.fields[string(UserDBSchema.Name)] = name
	return u
}

// SetOrigin is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetOrigin(origin string) UserUpdater {
	u.fields[string(UserDBSchema.Origin)] = origin
	return u
}

// SetSalt is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetSalt(salt string) UserUpdater {
	u.fields[string(UserDBSchema.Salt)] = salt
	return u
}

// SetSecretKey is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetSecretKey(secretKey string) UserUpdater {
	u.fields[string(UserDBSchema.SecretKey)] = secretKey
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u UserUpdater) SetUpdatedAt(updatedAt *time.Time) UserUpdater {
	u.fields[string(UserDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u UserUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u UserUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set UserQuerySet

// ===== BEGIN of User modifiers

// UserDBSchemaField describes database schema field. It requires for method 'Update'
type UserDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f UserDBSchemaField) String() string {
	return string(f)
}

// UserDBSchema stores db field names of User
var UserDBSchema = struct {
	ID        UserDBSchemaField
	CreatedAt UserDBSchemaField
	UpdatedAt UserDBSchemaField
	DeletedAt UserDBSchemaField
	Email     UserDBSchemaField
	Avatar    UserDBSchemaField
	Name      UserDBSchemaField
	Salt      UserDBSchemaField
	Hash      UserDBSchemaField
	SecretKey UserDBSchemaField
	Origin    UserDBSchemaField
}{

	ID:        UserDBSchemaField("id"),
	CreatedAt: UserDBSchemaField("created_at"),
	UpdatedAt: UserDBSchemaField("updated_at"),
	DeletedAt: UserDBSchemaField("deleted_at"),
	Email:     UserDBSchemaField("email"),
	Avatar:    UserDBSchemaField("avatar"),
	Name:      UserDBSchemaField("name"),
	Salt:      UserDBSchemaField("salt"),
	Hash:      UserDBSchemaField("hash"),
	SecretKey: UserDBSchemaField("secret_key"),
	Origin:    UserDBSchemaField("origin"),
}

// Update updates User fields by primary key
// nolint: dupl
func (o *User) Update(db *gorm.DB, fields ...UserDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"email":      o.Email,
		"avatar":     o.Avatar,
		"name":       o.Name,
		"salt":       o.Salt,
		"hash":       o.Hash,
		"secret_key": o.SecretKey,
		"origin":     o.Origin,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update User %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// UserUpdater is an User updates manager
type UserUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewUserUpdater creates new User updater
// nolint: dupl
func NewUserUpdater(db *gorm.DB) UserUpdater {
	return UserUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&User{}),
	}
}

// ===== END of User modifiers

// ===== BEGIN of query set WechatUserQuerySet

// WechatUserQuerySet is an queryset type for WechatUser
type WechatUserQuerySet struct {
	db *gorm.DB
}

// NewWechatUserQuerySet constructs new WechatUserQuerySet
func NewWechatUserQuerySet(db *gorm.DB) WechatUserQuerySet {
	return WechatUserQuerySet{
		db: db.Model(&WechatUser{}),
	}
}

func (qs WechatUserQuerySet) w(db *gorm.DB) WechatUserQuerySet {
	return NewWechatUserQuerySet(db)
}

func (qs WechatUserQuerySet) Preload(query string, args ...interface{}) WechatUserQuerySet {
	return NewWechatUserQuerySet(qs.db.Preload(query, args...))
}

// Preload preload associations with given conditions
//    db.Preload("Orders", "state NOT IN (?)", "cancelled").Find(&users)
func (qs WechatUserQuerySet) Select(fields ...WechatUserDBSchemaField) WechatUserQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *WechatUser) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *WechatUser) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) All(ret *[]WechatUser) error {
	return qs.db.Find(ret).Error
}

// CityEq is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CityEq(city string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`city` = ?", city))
}

// CityGt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CityGt(city string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`city` > ?", city))
}

// CityGte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CityGte(city string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`city` >= ?", city))
}

// CityIn is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CityIn(city ...string) WechatUserQuerySet {
	if len(city) == 0 {
		qs.db.AddError(errors.New("must at least pass one city in CityIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("city IN (?)", city))
}

// CityLike is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CityLike(city string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`city` LIKE ?", city))
}

// CityLt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CityLt(city string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`city` < ?", city))
}

// CityLte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CityLte(city string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`city` <= ?", city))
}

// CityNe is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CityNe(city string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`city` != ?", city))
}

// CityNotIn is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CityNotIn(city ...string) WechatUserQuerySet {
	if len(city) == 0 {
		qs.db.AddError(errors.New("must at least pass one city in CityNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("city NOT IN (?)", city))
}

// CityNotlike is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CityNotlike(city string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`city` NOT LIKE ?", city))
}

// Count is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CreatedAtEq(createdAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`created_at` = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CreatedAtGt(createdAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`created_at` > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CreatedAtGte(createdAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`created_at` >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CreatedAtLt(createdAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`created_at` < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CreatedAtLte(createdAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`created_at` <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) CreatedAtNe(createdAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`created_at` != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) Delete() error {
	return qs.db.Delete(WechatUser{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(WechatUser{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(WechatUser{})
	return db.RowsAffected, db.Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) DeletedAtEq(deletedAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) DeletedAtGt(deletedAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) DeletedAtGte(deletedAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) DeletedAtIsNotNull() WechatUserQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) DeletedAtIsNull() WechatUserQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) DeletedAtLt(deletedAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) DeletedAtLte(deletedAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) DeletedAtNe(deletedAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`deleted_at` != ?", deletedAt))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) GetUpdater() WechatUserUpdater {
	return NewWechatUserUpdater(qs.db)
}

// HeadImgURLEq is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) HeadImgURLEq(headImgURL string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`head_img_url` = ?", headImgURL))
}

// HeadImgURLGt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) HeadImgURLGt(headImgURL string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`head_img_url` > ?", headImgURL))
}

// HeadImgURLGte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) HeadImgURLGte(headImgURL string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`head_img_url` >= ?", headImgURL))
}

// HeadImgURLIn is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) HeadImgURLIn(headImgURL ...string) WechatUserQuerySet {
	if len(headImgURL) == 0 {
		qs.db.AddError(errors.New("must at least pass one headImgURL in HeadImgURLIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("head_img_url IN (?)", headImgURL))
}

// HeadImgURLLike is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) HeadImgURLLike(headImgURL string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`head_img_url` LIKE ?", headImgURL))
}

// HeadImgURLLt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) HeadImgURLLt(headImgURL string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`head_img_url` < ?", headImgURL))
}

// HeadImgURLLte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) HeadImgURLLte(headImgURL string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`head_img_url` <= ?", headImgURL))
}

// HeadImgURLNe is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) HeadImgURLNe(headImgURL string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`head_img_url` != ?", headImgURL))
}

// HeadImgURLNotIn is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) HeadImgURLNotIn(headImgURL ...string) WechatUserQuerySet {
	if len(headImgURL) == 0 {
		qs.db.AddError(errors.New("must at least pass one headImgURL in HeadImgURLNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("head_img_url NOT IN (?)", headImgURL))
}

// HeadImgURLNotlike is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) HeadImgURLNotlike(headImgURL string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`head_img_url` NOT LIKE ?", headImgURL))
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) IDEq(ID ID) WechatUserQuerySet {
	return qs.w(qs.db.Where("`id` = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) IDGt(ID ID) WechatUserQuerySet {
	return qs.w(qs.db.Where("`id` > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) IDGte(ID ID) WechatUserQuerySet {
	return qs.w(qs.db.Where("`id` >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) IDIn(ID ...ID) WechatUserQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) IDLt(ID ID) WechatUserQuerySet {
	return qs.w(qs.db.Where("`id` < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) IDLte(ID ID) WechatUserQuerySet {
	return qs.w(qs.db.Where("`id` <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) IDNe(ID ID) WechatUserQuerySet {
	return qs.w(qs.db.Where("`id` != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) IDNotIn(ID ...ID) WechatUserQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) Limit(limit int) WechatUserQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NicknameEq is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) NicknameEq(nickname string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`nickname` = ?", nickname))
}

// NicknameGt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) NicknameGt(nickname string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`nickname` > ?", nickname))
}

// NicknameGte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) NicknameGte(nickname string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`nickname` >= ?", nickname))
}

// NicknameIn is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) NicknameIn(nickname ...string) WechatUserQuerySet {
	if len(nickname) == 0 {
		qs.db.AddError(errors.New("must at least pass one nickname in NicknameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("nickname IN (?)", nickname))
}

// NicknameLike is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) NicknameLike(nickname string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`nickname` LIKE ?", nickname))
}

// NicknameLt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) NicknameLt(nickname string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`nickname` < ?", nickname))
}

// NicknameLte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) NicknameLte(nickname string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`nickname` <= ?", nickname))
}

// NicknameNe is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) NicknameNe(nickname string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`nickname` != ?", nickname))
}

// NicknameNotIn is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) NicknameNotIn(nickname ...string) WechatUserQuerySet {
	if len(nickname) == 0 {
		qs.db.AddError(errors.New("must at least pass one nickname in NicknameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("nickname NOT IN (?)", nickname))
}

// NicknameNotlike is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) NicknameNotlike(nickname string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`nickname` NOT LIKE ?", nickname))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) Offset(offset int) WechatUserQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs WechatUserQuerySet) One(ret *WechatUser) error {
	return qs.db.First(ret).Error
}

// OrderAscByCity is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderAscByCity() WechatUserQuerySet {
	return qs.w(qs.db.Order("city ASC"))
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderAscByCreatedAt() WechatUserQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderAscByDeletedAt() WechatUserQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByHeadImgURL is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderAscByHeadImgURL() WechatUserQuerySet {
	return qs.w(qs.db.Order("head_img_url ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderAscByID() WechatUserQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByNickname is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderAscByNickname() WechatUserQuerySet {
	return qs.w(qs.db.Order("nickname ASC"))
}

// OrderAscByUnionID is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderAscByUnionID() WechatUserQuerySet {
	return qs.w(qs.db.Order("union_id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderAscByUpdatedAt() WechatUserQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderAscByUserID is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderAscByUserID() WechatUserQuerySet {
	return qs.w(qs.db.Order("user_id ASC"))
}

// OrderDescByCity is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderDescByCity() WechatUserQuerySet {
	return qs.w(qs.db.Order("city DESC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderDescByCreatedAt() WechatUserQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderDescByDeletedAt() WechatUserQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByHeadImgURL is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderDescByHeadImgURL() WechatUserQuerySet {
	return qs.w(qs.db.Order("head_img_url DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderDescByID() WechatUserQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByNickname is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderDescByNickname() WechatUserQuerySet {
	return qs.w(qs.db.Order("nickname DESC"))
}

// OrderDescByUnionID is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderDescByUnionID() WechatUserQuerySet {
	return qs.w(qs.db.Order("union_id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderDescByUpdatedAt() WechatUserQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// OrderDescByUserID is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) OrderDescByUserID() WechatUserQuerySet {
	return qs.w(qs.db.Order("user_id DESC"))
}

// PreloadUser is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) PreloadUser() WechatUserQuerySet {
	return qs.w(qs.db.Preload("User"))
}

// UnionIDEq is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UnionIDEq(unionID string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`union_id` = ?", unionID))
}

// UnionIDGt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UnionIDGt(unionID string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`union_id` > ?", unionID))
}

// UnionIDGte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UnionIDGte(unionID string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`union_id` >= ?", unionID))
}

// UnionIDIn is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UnionIDIn(unionID ...string) WechatUserQuerySet {
	if len(unionID) == 0 {
		qs.db.AddError(errors.New("must at least pass one unionID in UnionIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("union_id IN (?)", unionID))
}

// UnionIDLike is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UnionIDLike(unionID string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`union_id` LIKE ?", unionID))
}

// UnionIDLt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UnionIDLt(unionID string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`union_id` < ?", unionID))
}

// UnionIDLte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UnionIDLte(unionID string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`union_id` <= ?", unionID))
}

// UnionIDNe is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UnionIDNe(unionID string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`union_id` != ?", unionID))
}

// UnionIDNotIn is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UnionIDNotIn(unionID ...string) WechatUserQuerySet {
	if len(unionID) == 0 {
		qs.db.AddError(errors.New("must at least pass one unionID in UnionIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("union_id NOT IN (?)", unionID))
}

// UnionIDNotlike is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UnionIDNotlike(unionID string) WechatUserQuerySet {
	return qs.w(qs.db.Where("`union_id` NOT LIKE ?", unionID))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UpdatedAtEq(updatedAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UpdatedAtGt(updatedAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UpdatedAtGte(updatedAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` >= ?", updatedAt))
}

// UpdatedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UpdatedAtIsNotNull() WechatUserQuerySet {
	return qs.w(qs.db.Where("updated_at IS NOT NULL"))
}

// UpdatedAtIsNull is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UpdatedAtIsNull() WechatUserQuerySet {
	return qs.w(qs.db.Where("updated_at IS NULL"))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UpdatedAtLt(updatedAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UpdatedAtLte(updatedAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UpdatedAtNe(updatedAt time.Time) WechatUserQuerySet {
	return qs.w(qs.db.Where("`updated_at` != ?", updatedAt))
}

// UserIDEq is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UserIDEq(userID ID) WechatUserQuerySet {
	return qs.w(qs.db.Where("`user_id` = ?", userID))
}

// UserIDGt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UserIDGt(userID ID) WechatUserQuerySet {
	return qs.w(qs.db.Where("`user_id` > ?", userID))
}

// UserIDGte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UserIDGte(userID ID) WechatUserQuerySet {
	return qs.w(qs.db.Where("`user_id` >= ?", userID))
}

// UserIDIn is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UserIDIn(userID ...ID) WechatUserQuerySet {
	if len(userID) == 0 {
		qs.db.AddError(errors.New("must at least pass one userID in UserIDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id IN (?)", userID))
}

// UserIDLt is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UserIDLt(userID ID) WechatUserQuerySet {
	return qs.w(qs.db.Where("`user_id` < ?", userID))
}

// UserIDLte is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UserIDLte(userID ID) WechatUserQuerySet {
	return qs.w(qs.db.Where("`user_id` <= ?", userID))
}

// UserIDNe is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UserIDNe(userID ID) WechatUserQuerySet {
	return qs.w(qs.db.Where("`user_id` != ?", userID))
}

// UserIDNotIn is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UserIDNotIn(userID ...ID) WechatUserQuerySet {
	if len(userID) == 0 {
		qs.db.AddError(errors.New("must at least pass one userID in UserIDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("user_id NOT IN (?)", userID))
}

// UserIsNotNull is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UserIsNotNull() WechatUserQuerySet {
	return qs.w(qs.db.Where("user IS NOT NULL"))
}

// UserIsNull is an autogenerated method
// nolint: dupl
func (qs WechatUserQuerySet) UserIsNull() WechatUserQuerySet {
	return qs.w(qs.db.Where("user IS NULL"))
}

// SetCity is an autogenerated method
// nolint: dupl
func (u WechatUserUpdater) SetCity(city string) WechatUserUpdater {
	u.fields[string(WechatUserDBSchema.City)] = city
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u WechatUserUpdater) SetCreatedAt(createdAt time.Time) WechatUserUpdater {
	u.fields[string(WechatUserDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u WechatUserUpdater) SetDeletedAt(deletedAt *time.Time) WechatUserUpdater {
	u.fields[string(WechatUserDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetHeadImgURL is an autogenerated method
// nolint: dupl
func (u WechatUserUpdater) SetHeadImgURL(headImgURL string) WechatUserUpdater {
	u.fields[string(WechatUserDBSchema.HeadImgURL)] = headImgURL
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u WechatUserUpdater) SetID(ID ID) WechatUserUpdater {
	u.fields[string(WechatUserDBSchema.ID)] = ID
	return u
}

// SetNickname is an autogenerated method
// nolint: dupl
func (u WechatUserUpdater) SetNickname(nickname string) WechatUserUpdater {
	u.fields[string(WechatUserDBSchema.Nickname)] = nickname
	return u
}

// SetUnionID is an autogenerated method
// nolint: dupl
func (u WechatUserUpdater) SetUnionID(unionID string) WechatUserUpdater {
	u.fields[string(WechatUserDBSchema.UnionID)] = unionID
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u WechatUserUpdater) SetUpdatedAt(updatedAt *time.Time) WechatUserUpdater {
	u.fields[string(WechatUserDBSchema.UpdatedAt)] = updatedAt
	return u
}

// SetUserID is an autogenerated method
// nolint: dupl
func (u WechatUserUpdater) SetUserID(userID ID) WechatUserUpdater {
	u.fields[string(WechatUserDBSchema.UserID)] = userID
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u WechatUserUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u WechatUserUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// ===== END of query set WechatUserQuerySet

// ===== BEGIN of WechatUser modifiers

// WechatUserDBSchemaField describes database schema field. It requires for method 'Update'
type WechatUserDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f WechatUserDBSchemaField) String() string {
	return string(f)
}

// WechatUserDBSchema stores db field names of WechatUser
var WechatUserDBSchema = struct {
	ID         WechatUserDBSchemaField
	CreatedAt  WechatUserDBSchemaField
	UpdatedAt  WechatUserDBSchemaField
	DeletedAt  WechatUserDBSchemaField
	UserID     WechatUserDBSchemaField
	User       WechatUserDBSchemaField
	UnionID    WechatUserDBSchemaField
	Nickname   WechatUserDBSchemaField
	HeadImgURL WechatUserDBSchemaField
	City       WechatUserDBSchemaField
}{

	ID:         WechatUserDBSchemaField("id"),
	CreatedAt:  WechatUserDBSchemaField("created_at"),
	UpdatedAt:  WechatUserDBSchemaField("updated_at"),
	DeletedAt:  WechatUserDBSchemaField("deleted_at"),
	UserID:     WechatUserDBSchemaField("user_id"),
	User:       WechatUserDBSchemaField("user"),
	UnionID:    WechatUserDBSchemaField("union_id"),
	Nickname:   WechatUserDBSchemaField("nickname"),
	HeadImgURL: WechatUserDBSchemaField("head_img_url"),
	City:       WechatUserDBSchemaField("city"),
}

// Update updates WechatUser fields by primary key
// nolint: dupl
func (o *WechatUser) Update(db *gorm.DB, fields ...WechatUserDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":           o.ID,
		"created_at":   o.CreatedAt,
		"updated_at":   o.UpdatedAt,
		"deleted_at":   o.DeletedAt,
		"user_id":      o.UserID,
		"user":         o.User,
		"union_id":     o.UnionID,
		"nickname":     o.Nickname,
		"head_img_url": o.HeadImgURL,
		"city":         o.City,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update WechatUser %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// WechatUserUpdater is an WechatUser updates manager
type WechatUserUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewWechatUserUpdater creates new WechatUser updater
// nolint: dupl
func NewWechatUserUpdater(db *gorm.DB) WechatUserUpdater {
	return WechatUserUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&WechatUser{}),
	}
}

// ===== END of WechatUser modifiers

// ===== END of all query sets
